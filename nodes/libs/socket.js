"use strict";const f=require("path"),h=require("fs-extra"),N=require("socket.io"),M=require("./tilib"),C=require("./uiblib"),b=require("@totallyinformation/ti-common-event-handler");function w(d){let e;if("headers"in d.request&&"x-real-ip"in d.request.headers)e=d.request.headers["x-real-ip"];else if("headers"in d.request&&"x-forwarded-for"in d.request.headers){if(d.request.headers["x-forwarded-for"]===void 0)throw new Error('socket.request.headers["x-forwarded-for"] is undefined');Array.isArray(d.request.headers["x-forwarded-for"])||(d.request.headers["x-forwarded-for"]=[d.request.headers["x-forwarded-for"]]),e=d.request.headers["x-forwarded-for"][0].split(",").shift()}else"connection"in d.request&&"remoteAddress"in d.request.connection?e=d.request.connection.remoteAddress:e=d.handshake.address;return e}function S(d,e){let i=d.handshake.auth.pathName.replace(`/${e.url}/`,"");return i.endsWith("/")&&(i+="index.html"),i===""&&(i="index.html"),i}class v{constructor(){this._isConfigured=!1,this.RED=void 0,this.uib=void 0,this.log=void 0,this.server=void 0,this.uib_socketPath=void 0,this.io=void 0,this.ioNamespaces={}}setup(e,i){if(!e||!i)throw new Error("[uibuilder:socket.js:setup] Called without required parameters or uib and/or server are undefined.");if(e.RED===null)throw new Error("[uibuilder:socket.js:setup] uib.RED is null");if(this._isConfigured===!0){e.RED.log.warn("[uibuilder:web:setup] Setup has already been called, it cannot be called again.");return}if(this.RED=e.RED,this.uib=e,this.log=e.RED.log,this.server=i,this._socketIoSetup(),e.configFolder===null)throw new Error("[uibuilder:socket.js:setup] uib.configFolder is null");this.outboundMsgMiddleware=function(n,a,u){return null};const t=f.join(e.configFolder,e.sioMsgOutMwName);if(h.existsSync(t))try{const r=require(t);typeof r=="function"?(this.outboundMsgMiddleware=r,this.log.trace("[uibuilder:socket:setup] sioMsgOut Middleware loaded successfully.")):this.log.warn("[uibuilder:socket:setup] sioMsgOut Middleware failed to load - check that uibRoot/.config/sioMsgOut.js has a valid exported fn.")}catch(r){this.log.warn(`[uibuilder:socket:setup] sioMsgOut middleware Failed to load. Reason: ${r.message}`)}this._isConfigured=!0}_socketIoSetup(){const e=this.uib,i=this.RED,t=this.log,r=this.server;if(e===void 0)throw new Error("uib is undefined");if(i===void 0)throw new Error("RED is undefined");if(t===void 0)throw new Error("log is undefined");const n=this.uib_socketPath=M.urlJoin(e.nodeRoot,e.moduleName,"vendor","socket.io");t.trace(`[uibuilder:socket:socketIoSetup] Socket.IO initialisation - Socket Path=${n}, CORS Origin=*`);let a={path:n,serveClient:!0,connectionStateRecovery:{maxDisconnectionDuration:12e4,skipMiddlewares:!0},cors:{origin:"*"}};i.settings.uibuilder&&i.settings.uibuilder.socketOptions&&(a=Object.assign({},a,i.settings.uibuilder.socketOptions)),this.io=new N.Server(r,a)}get isConfigured(){return this._isConfigured}sendToFe(e,i,t){const r=this.uib,n=this.log;if(r===void 0)throw new Error("uib is undefined");if(n===void 0)throw new Error("log is undefined");t===void 0&&(t=r.ioChannels.client);const a=this.ioNamespaces[i],u=e._socketId||void 0;t===r.ioChannels.control&&!e.from&&(e.from="server");try{this.outboundMsgMiddleware(e,i,t,a)}catch(s){n.warn(`[uibuilder:socket:sendToFe] outboundMsgMiddleware middleware failed to run. Reason: ${s.message}`)}u!==void 0?(n.trace(`[uibuilder:socket.js:sendToFe:${i}] msg sent on to client ${u}. Channel: ${t}. ${JSON.stringify(e)}`),a.to(u).emit(t,e)):(n.trace(`[uibuilder:socket.js:sendToFe:${i}] msg sent on to ALL clients. Channel: ${t}. ${JSON.stringify(e)}`),a.emit(t,e))}sendToFe2(e,i,t){const r=this.uib,n=this.ioNamespaces[i];if(r===void 0)throw new Error("uib is undefined");if(this.log===void 0)throw new Error("this.log is undefined");t&&(e._socketId=t),e._socketId?(this.log.trace(`[uibuilder:socket:sendToFe2:${i}] msg sent on to client ${e._socketId}. Channel: ${r.ioChannels.server}. ${JSON.stringify(e)}`),n.to(e._socketId).emit(r.ioChannels.server,e)):(this.log.trace(`[uibuilder:socket:sendToFe2:${i}] msg sent on to ALL clients. Channel: ${r.ioChannels.server}. ${JSON.stringify(e)}`),n.emit(r.ioChannels.server,e))}sendCtrlMsg(e,i){i.send([null,e])}getClientDetails(e,i){let t;return e.handshake.auth.pathName&&(t=S(e,i)),{_socketId:e.id,version:e.handshake.auth.clientVersion,ip:w(e),clientId:e.handshake.auth.clientId,tabId:e.handshake.auth.tabId,url:i.url,pageName:t,urlParams:e.handshake.auth.urlParams,connections:e.handshake.auth.connectedNum,lastNavType:e.handshake.auth.lastNavType,tls:e.handshake.secure,connectedTimestamp:new Date(e.handshake.issued).toISOString(),referer:e.request.headers.referer,recovered:e.recovered}}getNs(e){return this.ioNamespaces[e]}sendIt(e,i){e._uib&&e._uib.originator&&typeof e._uib.originator=="string"?b.emit(`node-red-contrib-uibuilder/return/${e._uib.originator}`,e):i.send(e)}listenFromClient(e,i,t){const r=this.log;if(r===void 0)throw new Error("log is undefined");switch(t.rcvMsgCount++,r.trace(`[uibuilder:socket:${t.url}] Data received from client, ID: ${i.id}, Msg: ${JSON.stringify(e)}`),typeof e){case"string":case"number":case"boolean":e={topic:t.topic,payload:e}}Object.prototype.hasOwnProperty.call(e,"_socketId")||(e._socketId=i.id),t.showMsgUib&&(e._uib?e._uib={...e._uib,...this.getClientDetails(i,t)}:e._uib=this.getClientDetails(i,t)),this.sendIt(e,t)}addNS(e){const i=this.log,t=this.uib;if(i===void 0)throw new Error("log is undefined");if(t===void 0)throw new Error("uib is undefined");if(this.io===void 0)throw new Error("this.io is undefined");const r=this.ioNamespaces[e.url]=this.io.of(e.url),n=r.url=e.url;if(r.nodeId=e.id,r.rcvMsgCount=0,r.log=i,t.configFolder===null)throw new Error("uib.configFolder is undefined");const a=f.join(t.configFolder,"sioMiddleware.js");if(h.existsSync(a))try{const s=require(a);typeof s=="function"?(r.use(s),i.trace(`[uibuilder:socket:addNs:${n}] Socket.IO sioMiddleware.js middleware loaded successfully for NS.`)):i.warn(`[uibuilder:socket:addNs:${n}] Socket.IO middleware failed to load for NS - check that uibRoot/.config/sioMiddleware.js has a valid exported fn.`)}catch(s){i.warn(`[uibuilder:socket:addNs:${n}] Socket.IO middleware failed to load for NS. Reason: ${s.message}`)}const u=this;r.on("connection",s=>{if(s.on("disconnect",(o,l)=>{e.ioClientsCount=r.sockets.size,i.trace(`[uibuilder:socket:${n}:disconnect] Client disconnected, clientCount: ${r.sockets.size}, Reason: ${o}, ID: ${s.id}, IP Addr: ${w(s)}, Client ID: ${s.handshake.auth.clientId}. For node ${e.id}`),e.statusDisplay.text="connected "+r.sockets.size,C.setNodeStatus(e);const c={uibuilderCtrl:"client disconnect",reason:o,topic:e.topic||void 0,from:"server",description:l,...u.getClientDetails(s,e)};u.sendToFe(c,e.url,t.ioChannels.control),u.sendCtrlMsg(c,e),b.emit(`node-red-contrib-uibuilder/${this.url}/clientDisconnect`,c)}),s.on(t.ioChannels.client,function(o){u.listenFromClient(o,s,e)}),s.on(t.ioChannels.control,function(o){switch(e.rcvMsgCount++,i.trace(`[uibuilder:socket:${n}] Control Msg from client, ID: ${s.id}, Msg: ${JSON.stringify(o)}`),typeof o){case"string":case"number":case"boolean":o={uibuilderCtrl:o}}o={...o,...u.getClientDetails(s,e)},o.from="client",o.topic||(o.topic=e.topic),u.sendCtrlMsg(o,e)}),s.on("error",function(o){i.error(`[uibuilder:socket:addNs:${n}] ERROR received, ID: ${s.id}, Reason: ${o.message}`);const l={uibuilderCtrl:"socket error",error:o.message,from:"server",...u.getClientDetails(s,e)};u.sendCtrlMsg(l,e)}),e.ioClientsCount=r.sockets.size,i.trace(`[uibuilder:socket:addNS:${n}:connect] Client connected. ClientCount: ${r.sockets.size}, Socket ID: ${s.id}, IP Addr: ${w(s)}, Client ID: ${s.handshake.auth.clientId}, Recovered?: ${s.recovered}, Client Version: ${s.handshake.auth.clientVersion}. For node ${e.id}`),t.configFolder===null)throw new Error("uib.configFolder is undefined");const g=f.join(t.configFolder,t.sioUseMwName);if(h.existsSync(g))try{const o=require(g);typeof o=="function"?(s.use(o),i.trace(`[uibuilder:socket:onConnect:${n}] sioUse sioUse.js middleware loaded successfully for NS ${n}.`)):i.warn(`[uibuilder:socket:onConnect:${n}] sioUse middleware failed to load for NS ${n} - check that uibRoot/.config/sioUse.js has a valid exported fn.`)}catch(o){i.warn(`[uibuilder:socket:addNS:${n}] sioUse failed to load Use middleware. Reason: ${o.message}`)}e.statusDisplay.text=`connected ${r.sockets.size}`,C.setNodeStatus(e);const $={uibuilderCtrl:"client connect",serverTimestamp:new Date,topic:e.topic||void 0,version:t.version,_socketId:s.id};u.sendToFe($,e.url,t.ioChannels.control);const p={uibuilderCtrl:"client connect",topic:e.topic||void 0,from:"server",...u.getClientDetails(s,e)};u.sendCtrlMsg(p,e),b.emit(`node-red-contrib-uibuilder/${this.url}/clientConnect`,p)})}removeNS(e){const i=this.ioNamespaces[e.url];i.disconnectSockets(!0),i.removeAllListeners()}}try{const d=new v;module.exports=d}catch(d){console.error(`[uibuilder:socket.js] Unable to create class instance. Error: ${d.message}`)}
//# sourceMappingURL=socket.js.map
