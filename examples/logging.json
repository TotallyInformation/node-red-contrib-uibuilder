[
    {
        "id": "d570fec4b69c39d2",
        "type": "tab",
        "label": "Logging Examples",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac730e23a4b55c29",
        "type": "group",
        "z": "d570fec4b69c39d2",
        "name": "Logging messages to and from UIBUILDER",
        "style": {
            "label": true,
            "stroke": "#18a2b8"
        },
        "nodes": [
            "7c0ebeb4893409b2",
            "7db2af3c0254d019",
            "d2beb2cf0d7a2289",
            "5a8cf9a21dfbd2c8",
            "b034f1b70c87ed68",
            "3de63b4d1c40293a",
            "6a557ba483a74209",
            "75634187b9963609",
            "3d5e30d84bf7ab65",
            "d92706e01019abf2",
            "05c200aa877721dd",
            "98c3ca13731fe46f",
            "2bcb3f1c952d932b",
            "f330abaf2d434ec4",
            "4023abf528d4ff32",
            "bc1050c11c340817",
            "a56f6be6b1e598f7",
            "a62e20b32ac88ae9",
            "adcb8e95a9d1545c",
            "3bc75cadcabd5ee2",
            "765777d7432f33ad"
        ],
        "x": 34,
        "y": 7,
        "w": 892,
        "h": 494
    },
    {
        "id": "7c0ebeb4893409b2",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "index.html",
        "info": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <title>Logging</title>\n    <meta name=\"description\" content=\"Logging\">\n    <link rel=\"icon\" href=\"./images/node-blue.ico\">\n\n    <!-- Your own CSS -->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"./index.css\" media=\"all\">\n\n</head>\n\n<body class=\"uib\">\n\n    <h1>Logging examples</h1>\n\n    <!-- Buttons -->\n    <button class=\"button\" onclick=\"button1('Basic payload from html')\">Basic logging</button>\n    <button class=\"button\" onclick=\"button2('First payload','Second payload')\">Compute property names</button>\n    <button class=\"button\" onclick=\"button3('An important payload')\">Custom CSS styling</button>\n    <button class=\"button\" onclick=\"button4({fruit:'apple',color:'red'},{fruit:'banana',color:'yellow'},{fruit:'pear',color:'green'})\">Logging with tables</button>\n    <button class=\"button\" onclick=\"button5('Time taken')\">Logging performance</button>\n    <button class=\"button\" onclick=\"button6('Find me in index.html')\">Stack trace</button>\n    <button class=\"button\" onclick=\"button7('Some information')\">Info</button>\n    <button class=\"button\" onclick=\"button8('A warning message')\">Warnings</button>\n    <button class=\"button\" onclick=\"button9('An error message')\">Errors</button>\n\n    <!-- #region Supporting Scripts. These MUST be in the right order. Note no leading / -->\n    <script src=\"../uibuilder/vendor/socket.io/socket.io.js\">/* REQUIRED: Socket.IO is loaded only once for all instances. Without this, you don't get a websocket connection */</script>\n    <script src=\"./uibuilderfe.min.js\">/* REQUIRED: remove 'min.' to use dev version */</script>\n    <script src=\"./index.js\">/* OPTIONAL: Put your custom code here */</script>\n    <!-- #endregion -->\n\n</body>\n\n</html>",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "7db2af3c0254d019",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "index.css",
        "info": "/* Load the defaults from `<userDir>/node_modules/node-red-contrib-uibuilder/front-end/src/uib-styles.css` */\n@import url(\"./uib-styles.css\");\n\n.button {\n  display: block; /* Make the buttons appear below each other */\n  margin-top: 10px;\n};",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "d2beb2cf0d7a2289",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "index.js",
        "info": "/* eslint-disable strict */\n/* jshint browser: true, esversion: 6, asi: true */\n/* globals uibuilder */\n// @ts-nocheck\n\n/** Minimalist code for uibuilder and Node-RED */\n\"use strict\"\n\n// Send messages back to Node-RED with buttons\n\n// Basic logging\nwindow.button1 = function button1(payload) {\n    uibuilder.send({\n        \"topic\": \"Basic logging\",\n        \"payload\": payload,\n        \"log\": \"console.log(payload);\",\n    });\n    console.log(payload);\n};\n\n// Logging with multiple properties and names\nwindow.button2 = function button2(payload1, payload2) {\n    uibuilder.send({\n        \"topic\": \"Compute property names\",\n        \"payload1\": payload1,\n        \"payload2\": payload2,\n        \"log\": \"console.log({ payload1, payload2 })\",\n    });\n    console.log({ payload1, payload2 });\n};\n\n// Logging with custom CSS styling\nwindow.button3 = function button3(payload) {\n    uibuilder.send({\n        \"topic\": \"Custom CSS styling\",\n        \"payload\": payload,\n        \"log\": \"console.log(`%c ${payload}`, 'color: red; font-weight: bold;');\",\n    });\n    console.log(`%c ${payload}`, \"color: red; font-weight: bold;\");\n};\n\n// Logging with tables\nwindow.button4 = function button4(payload1, payload2, payload3) {\n    uibuilder.send({\n        \"topic\": \"Logging with tables\",\n        \"payload1\": payload1,\n        \"payload2\": payload2,\n        \"payload3\": payload3,\n        \"log\": \"console.table([ payload1, payload2, payload3 ]);\",\n    });\n    console.table([payload1, payload2, payload3]);\n};\n\nlet i = 0;\n// Logging performance/time to complete a task\nwindow.button5 = function button5(payload) {\n    uibuilder.send({\n        \"topic\": \"Logging performance\",\n        \"payload\": payload,\n        \"log\": \"console.time(`${payload}`);\\nTASK TO MEASURE\\nconsole.timeEnd(`${payload}`);\",\n    });\n    // Start timer\n    console.time(`${payload}`);\n\n    // This is the task\n    i = 0;\n    while (i < 20000000) { i++ };\n\n    // End timer\n    console.timeEnd(`${payload}`);\n};\n\n// Advanced logging, Stack trace\nwindow.button6 = function button6(payload) {\n    uibuilder.send({\n        \"topic\": \"Stack trace\",\n        \"payload\": payload,\n        \"log\": \"console.trace(payload);\",\n    });\n    console.trace(payload);\n};\n\n// Info\nwindow.button7 = function button7(payload) {\n    uibuilder.send({\n        \"topic\": \"Info\",\n        \"payload\": payload,\n        \"log\": \"console.info(payload);\",\n    });\n    console.info(payload);\n};\n\n// Warnings\nwindow.button8 = function button8(payload) {\n    uibuilder.send({\n        \"topic\": \"Warnings\",\n        \"payload\": payload,\n        \"log\": \"console.warn(payload);\",\n    });\n    console.warn(payload);\n};\n\n// Errors\nwindow.button9 = function button9(payload) {\n    uibuilder.send({\n        \"topic\": \"Errors\",\n        \"payload\": payload,\n        \"log\": \"console.error(payload);\",\n    });\n    console.error(payload);\n};\n\n// Run this function when the document is loaded\nwindow.onload = function () {\n    // Start up uibuilder - see the docs for the optional parameters\n    uibuilder.start();\n\n    // Listen for incoming messages from Node-RED\n    uibuilder.onChange(\"msg\", function (msg) {\n        // Emulate website button presses from incoming Node-RED messages\n        if (msg.payload) {\n            if (msg.topic === \"button 1\") {\n                button1(msg.payload);\n            };\n            if (msg.topic === \"button 2\") {\n                button2(msg.payload[0],msg.payload[1]);\n            };\n            if (msg.topic === \"button 3\") {\n                button3(msg.payload);\n            };\n            if (msg.topic === \"button 4\") {\n                button4(msg.payload[0],msg.payload[1],msg.payload[2]);\n            };\n            if (msg.topic === \"button 5\") {\n                button5(msg.payload);\n            };\n            if (msg.topic === \"button 6\") {\n                button6(msg.payload);\n            };\n            if (msg.topic === \"button 7\") {\n                button7(msg.payload);\n            };\n            if (msg.topic === \"button 8\") {\n                button8(msg.payload);\n            };\n            if (msg.topic === \"button 9\") {\n                button9(msg.payload);\n            };\n        };\n        // console.info(\"[indexjs:uibuilder.onChange] msg received from Node-RED server:\", msg);\n    });\n};",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "5a8cf9a21dfbd2c8",
        "type": "uibuilder",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "",
        "topic": "",
        "url": "logging",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.1.1",
        "x": 420,
        "y": 300,
        "wires": [
            [
                "a56f6be6b1e598f7"
            ],
            [
                "6a557ba483a74209"
            ]
        ]
    },
    {
        "id": "b034f1b70c87ed68",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Basic logging",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 1",
        "payload": "Basic payload from Node-RED",
        "payloadType": "str",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "3de63b4d1c40293a",
        "type": "debug",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "display info/logs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "6a557ba483a74209",
        "type": "debug",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "75634187b9963609",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Compute property names",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 2",
        "payload": "[\"First payload from Node-RED\",\"Second payload from Node-RED\"]",
        "payloadType": "json",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "3d5e30d84bf7ab65",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Custom CSS styling",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 3",
        "payload": "An Important payload from Node-RED",
        "payloadType": "str",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "d92706e01019abf2",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Logging with tables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 4",
        "payload": "[{\"fruit\":\"apple\",\"color\":\"red\"},{\"fruit\":\"banana\",\"color\":\"yellow\"},{\"fruit\":\"pear\",\"color\":\"green\"}]",
        "payloadType": "json",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "05c200aa877721dd",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Logging performance",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 5",
        "payload": "Time taken",
        "payloadType": "str",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "98c3ca13731fe46f",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Stack trace",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 6",
        "payload": "Find me in Node-RED",
        "payloadType": "str",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "2bcb3f1c952d932b",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Info",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 7",
        "payload": "Some information from Node-RED",
        "payloadType": "str",
        "x": 250,
        "y": 380,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "f330abaf2d434ec4",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Warnings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 8",
        "payload": "A warning from Node-RED",
        "payloadType": "str",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "4023abf528d4ff32",
        "type": "inject",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Errors",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "button 9",
        "payload": "An error from Node-RED",
        "payloadType": "str",
        "x": 250,
        "y": 460,
        "wires": [
            [
                "5a8cf9a21dfbd2c8"
            ]
        ]
    },
    {
        "id": "bc1050c11c340817",
        "type": "function",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "display errors",
        "func": "node.error(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "a56f6be6b1e598f7",
        "type": "switch",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Errors",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Warnings",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 260,
        "wires": [
            [
                "bc1050c11c340817"
            ],
            [
                "a62e20b32ac88ae9"
            ],
            [
                "3de63b4d1c40293a"
            ]
        ]
    },
    {
        "id": "a62e20b32ac88ae9",
        "type": "function",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "display warnings",
        "func": "node.warn(msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": []
    },
    {
        "id": "adcb8e95a9d1545c",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Usage information",
        "info": "This example demonstrates passing messages both into and from uibulder,\nand logging messages to the Node-RED debug panel and the Web Dev console.\n\nOpen the webserver in another window and access the Web Dev console with F12 first.\nTest the buttons on the webpage and view the outputs.\nOr you can inject messages from Node-RED and view the outputs.\n\nFeel free to use/modify my code to your hearts desire!",
        "x": 450,
        "y": 380,
        "wires": []
    },
    {
        "id": "3bc75cadcabd5ee2",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "As soon as you import this example, press Deploy before doing anything else. \\n This will create the required folders.",
        "info": "",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "765777d7432f33ad",
        "type": "comment",
        "z": "d570fec4b69c39d2",
        "g": "ac730e23a4b55c29",
        "name": "Make sure that you take the content of the 3 comments below and \\n put them into the appropriate files using the uibuilder file editor",
        "info": "",
        "x": 590,
        "y": 120,
        "wires": []
    }
]
