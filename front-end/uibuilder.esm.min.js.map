{
  "version": 3,
  "sources": ["node_modules/engine.io-parser/build/esm/commons.js", "node_modules/engine.io-parser/build/esm/encodePacket.browser.js", "node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "node_modules/engine.io-parser/build/esm/decodePacket.browser.js", "node_modules/engine.io-parser/build/esm/index.js", "node_modules/@socket.io/component-emitter/index.mjs", "node_modules/engine.io-client/build/esm/globalThis.browser.js", "node_modules/engine.io-client/build/esm/util.js", "node_modules/engine.io-client/build/esm/transport.js", "node_modules/engine.io-client/build/esm/contrib/yeast.js", "node_modules/engine.io-client/build/esm/contrib/parseqs.js", "node_modules/engine.io-client/build/esm/contrib/has-cors.js", "node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js", "node_modules/engine.io-client/build/esm/transports/polling.js", "node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js", "node_modules/engine.io-client/build/esm/transports/websocket.js", "node_modules/engine.io-client/build/esm/transports/index.js", "node_modules/engine.io-client/build/esm/contrib/parseuri.js", "node_modules/engine.io-client/build/esm/socket.js", "node_modules/engine.io-client/build/esm/index.js", "node_modules/socket.io-client/build/esm/url.js", "node_modules/socket.io-parser/build/esm/index.js", "node_modules/socket.io-parser/build/esm/is-binary.js", "node_modules/socket.io-parser/build/esm/binary.js", "node_modules/socket.io-client/build/esm/on.js", "node_modules/socket.io-client/build/esm/socket.js", "node_modules/socket.io-client/build/esm/contrib/backo2.js", "node_modules/socket.io-client/build/esm/manager.js", "node_modules/socket.io-client/build/esm/index.js", "src/front-end-module/uibuilder.module.js"],
  "sourcesContent": ["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n", "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n", "import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n", "import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n", "import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n", "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n", "import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n", "import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n", "import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n", "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n", "import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n", "// @ts-nocheck\n/** This is the Front-End JavaScript for uibuilder  in HTML Module form\n * It provides a number of global objects that can be used in your own javascript.\n * see the docs folder `./docs/uibuilder.module.md` for details of how to use this fully.\n *\n * Please use the default index.js file for your own code and leave this as-is.\n * See Uib._meta for client version string\n */\n/*\n  Copyright (c) 2022-2023 Julian Knight (Totally Information)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n//#region --- Type Defs --- //\n/**\n * A string containing HTML markup\n * @typedef {string} html\n */\n//#endregion --- Type Defs --- //\n\n//#region --- We need the Socket.IO client - check in decreasing order of likelihood --- //\nimport io from 'socket.io-client' // Note: Only works when using esbuild to bundle\n\n// TODO - Maybe - check if already loaded as window['io']?\n// TODO - Maybe - Should this be moved to inside the class - would know the httpRoot then so less need to guess?\n// TODO           Or, could pull the cookie processing out of the class\n// const ioLocns = [ // Likely locations of the Socket.IO client library\n//     // Where it should normally be\n//     '../uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     // Where it might be if using a custom uib Express server and haven't changed httpNodeRoot\n//     '/uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     // Where it might be if using a custom uib Express server and have changed httpNodeRoot\n//     '../../../../../uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     '../../../../uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     '../../../uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     '../../uibuilder/vendor/socket.io-client/socket.io.esm.min.js',\n//     // Direct from the Internet - last ditch attempt\n//     'https://cdn.jsdelivr.net/npm/socket.io-client/+esm',\n// ]\n\n// let io\n// for (const locn of ioLocns) {\n//     try {\n//         ({ io } = await import(locn))\n//         log('trace', 'uibuilder.module.js:io', `Socket.IO client library found at '${locn}'`)()\n//     } catch (e) {\n//         log('trace', 'uibuilder.module.js:io', `Socket.IO client library not found at '${locn}'`)()\n//     }\n//     if (io) break\n// }\n// if (!io) log('error', 'uibuilder.module.js', 'Socket.IO client failed to load')()\n//#endregion -------- -------- -------- //\n\nconst version = '6.3.0-mod'\n\n// TODO Add option to allow log events to be sent back to Node-RED as uib ctrl msgs\n//#region --- Module-level utility functions --- //\n\n// @ts-ignore Detect whether the loaded library is minified or not\nconst isMinified = !(/param/).test(function (param) { }) // eslint-disable-line no-unused-vars\n\n//#region --- print/console - debugging output functions --- //\n\n/** Default log level - Error & Warn */\nlet logLevel = isMinified ? 0 : 1  // When using minified lib, assume production and only log errors otherwise also log warn\n// function changeLogLevel(level) {\n//     logLevel = level\n//     console.trace = logLevel < 4 ? function(){} : console.trace\n//     console.debug = logLevel < 2 ? function(){} : console.debug\n//     if ( logLevel < 1 ) {\n//         console.log = console.group = console.groupEnd =  function(){}\n//     }\n// }\n\n// Experimental\nconst LOG_STYLES = {\n    // 0\n    error: {\n        css: 'background: red; color: black;',\n        txtCss: 'color: red; ',\n        pre: '\u26D4 ',\n        console: 'error',  // or trace\n    },\n    // 1\n    warn: {\n        css: 'background: darkorange; color: black;',\n        txtCss: 'color: darkorange; ',\n        pre: '\u26A0 ',\n        console: 'warn',\n    },\n    // 2\n    info: {\n        css: 'background: aqua; color: black;',\n        txtCss: 'color: aqua;',\n        pre: '\u2757 ',\n        console: 'info',\n    },\n    // 3\n    log: {\n        css: 'background: grey; color: yellow;',\n        txtCss: 'color: grey;',\n        pre: '',\n        console: 'log',\n    },\n    // 4\n    debug: {\n        css: 'background: chartreuse; color: black;',\n        txtCss: 'color: chartreuse;',\n        pre: '',\n        console: 'debug',\n    },\n    // 5\n    trace: {\n        css: 'background: indigo; color: yellow;',\n        txtCss: 'color: hotpink;',\n        pre: '',\n        console: 'log',\n    },\n\n    names: ['error', 'warn', 'info', 'log', 'debug', 'trace'],\n    reset: 'color: inherit;',\n    head: 'font-weight:bold; font-style:italic;',\n    level: 'font-weight:bold; border-radius: 3px; padding: 2px 5px; display:inline-block;',\n}\n/** Custom logging. e.g. log(2, 'here:there', 'jiminy', {fred:'jim'})()\n * @returns {Function} Log function @example log(2, 'here:there', 'jiminy', {fred:'jim'})()\n */\nfunction log() {\n    // Get the args\n    const args = Array.prototype.slice.call(arguments)\n\n    // 1st arg is the log level/type\n    let level = args.shift()\n    let strLevel\n    switch (level) {\n        case 'trace':\n        case 5: {\n            if (logLevel < 5) break\n            level = 5 // make sure level is numeric\n            strLevel = 'trace'\n            break\n        }\n\n        case 'debug':\n        case 4: {\n            if (logLevel < 4) break\n            level = 4\n            strLevel = 'debug'\n            break\n        }\n\n        case 'log':\n        case 3: {\n            if (logLevel < 3) break\n            level = 3\n            strLevel = 'log'\n            break\n        }\n\n        case 'info':\n        case '':\n        case 2: {\n            if (logLevel < 2) break\n            level = 2\n            strLevel = 'info'\n            break\n        }\n\n        case 'warn':\n        case 1: {\n            if (logLevel < 1) break\n            level = 1\n            strLevel = 'warn'\n            break\n        }\n\n        case 'error':\n        case 'err':\n        case 0: {\n            if (logLevel < 0) break\n            level = 0\n            strLevel = 'error'\n            break\n        }\n\n        default: {\n            level = -1\n            break\n        }\n\n    }\n\n    // If set to something unknown, no log output\n    if (strLevel === undefined) return function () { }\n\n    // 2nd arg is a heading that will be colour highlighted\n    const head = args.shift()\n\n    // Bind back to console.log (could use console[strLevel] but some levels ignore some formatting, use console.xxx directly or dedicated fn)\n    return Function.prototype.bind.call(\n        console[LOG_STYLES[strLevel].console],\n        console,\n        `%c${LOG_STYLES[strLevel].pre}${strLevel}%c [${head}]`, `${LOG_STYLES.level} ${LOG_STYLES[strLevel].css}`, `${LOG_STYLES.head} ${LOG_STYLES[strLevel].txtCss}`,\n        ...args\n    )\n}\n//#endregion\n\n/** A hack to dynamically load a remote module and wait until it is loaded\n * @param {string} url The URL of the module to load\n * @returns {object|null} Either the result object or null (if the load fails)\n */\n// function loadModule(url) { // eslint-disable-line no-unused-vars\n//     let done\n\n//     import(url)\n//         .then(res => {\n//             log('debug', '>> then >>', res)()\n//             done = res\n//         })\n//         .catch(err => {\n//             console.error(`[uibuilder:loadModule] Could not load module ${url}`, err)\n//             done = null\n//         })\n\n//     //  eslint-disable-next-line no-empty\n//     while (!done) { } // eslint-disable-line no-unmodified-loop-condition\n\n//     return done\n// }\n\n/** Makes a null or non-object into an object\n * If not null, moves \"thing\" to {payload:thing}\n *\n * @param {*} thing Thing to check\n * @param {string} [property='payload'] property that \"thing\" is moved to if not null and not an object\n * @returns {!object} _\n */\nfunction makeMeAnObject(thing, property) {\n    if (!property) property = 'payload'\n    if (typeof property !== 'string') {\n        log('warn', 'uibuilderfe:makeMeAnObject', `WARNING: property parameter must be a string and not: ${typeof property}`)()\n        property = 'payload'\n    }\n    let out = {}\n    if ( thing !== null && thing.constructor.name === 'Object' ) {\n        out = thing\n    } else if (thing !== null) {\n        out[property] = thing\n    }\n    return out\n} // --- End of make me an object --- //\n\n/** Joins all arguments as a URL string\n * see http://stackoverflow.com/a/28592528/3016654\n * since v1.0.10, fixed potential double // issue\n * arguments {string} URL fragments\n * @returns {string} _\n */\nfunction urlJoin() {\n    const paths = Array.prototype.slice.call(arguments)\n    const url = '/' + paths.map(function (e) {\n        return e.replace(/^\\/|\\/$/g, '')\n    })\n        .filter(function (e) {\n            return e\n        })\n        .join('/')\n    return url.replace('//', '/')\n} // ---- End of urlJoin ---- //\n\n//#endregion --- Module-level utility functions --- //\n\n/** Define and export the Uib class - note that an instance of the class is also exported in the wrap-up\n * @typicalname uibuilder\n */\nexport const Uib = class Uib {\n\n    //#region private class vars\n\n    // How many times has the loaded instance connected to Socket.IO (detect if not a new load?)\n    connectedNum = 0\n    // event listener callbacks by property name\n    // #events = {}\n    // Socket.IO channel names\n    _ioChannels = { control: 'uiBuilderControl', client: 'uiBuilderClient', server: 'uiBuilder' }\n    /** setInterval holder for pings @type {function|undefined} */\n    #pingInterval\n    // onChange event callbacks\n    #propChangeCallbacks = {}\n    // onTopic event callbacks\n    #msgRecvdByTopicCallbacks = {}\n    // Is Vue available?\n    isVue = false\n    // What version? Set in startup if Vue is loaded. Won't always work\n    vueVersion = undefined\n    /** setInterval id holder for Socket.IO checkConnect\n     * @type {number|null}\n     */\n    #timerid = null\n    // Holds the reference ID for the internal msg change event handler so that it can be cancelled\n    #MsgHandler\n    // Placeholder for io.socket - can't make a # var until # fns allowed in all browsers\n    _socket\n    // Placeholder for an observer that watches the whole DOM for changes - can't make a # var until # fns allowed in all browsers\n    _htmlObserver\n    // Has showMsg been turned on?\n    #isShowMsg = false\n    // Has showStatus been turned on?\n    #isShowStatus = false\n    // Externally accessible command functions (NB: Case must match) - remember to update _uibCommand for new commands\n    #extCommands = [\n        'get', 'set', 'htmlSend', 'showMsg', 'showStatus', 'uiGet', 'uiWatch', 'include'\n    ]\n\n    // What status variables to show via showStatus()\n    #showStatus = {\n        online: { 'var': 'online', 'label': 'Online?', 'description': 'Is the browser online?', },\n        ioConnected: { 'var': 'ioConnected', 'label': 'Socket.IO connected?', 'description': 'Is Socket.IO connected?', },\n        connectedNum: { 'var': 'connectedNum', 'label': '# reconnections', 'description': 'How many times has Socket.IO had to reconnect since last page load?', },\n\n        clientId: { 'var': 'clientId', 'label': 'Client ID', 'description': 'Static client unique id set in Node-RED. Only changes when browser is restarted.', },\n        tabId: { 'var': 'tabId', 'label': 'Browser tab ID', 'description': 'Static unique id for the browser\\'s current tab', },\n        cookies: { 'var': 'cookies', 'label': 'Cookies', 'description': 'Cookies set in Node-RED', },\n        httpNodeRoot: { 'var': 'httpNodeRoot', 'label': 'httpNodeRoot', 'description': 'From Node-RED\\' settings.js, affects URL\\'s. May be wrong for pages in sub-folders', },\n        pageName: { 'var': 'pageName', 'label': 'Page name', 'description': 'Actual name of this page', },\n\n        ioNamespace: { 'var': 'ioNamespace', 'label': 'SIO namespace', 'description': 'Socket.IO namespace - unique to each uibuilder node instance', },\n        // ioPath: { 'var': 'ioPath', 'label': 'SIO path', 'description': '', }, // no longer needed in the modern client\n        socketError: { 'var': 'socketError', 'label': 'Socket error', 'description': 'If the Socket.IO connection has failed, says why', },\n\n        msgsSent: { 'var': 'msgsSent', 'label': '# msgs sent', 'description': 'How many standard messages have been sent to Node-RED?', },\n        msgsReceived: { 'var': 'msgsReceived', 'label': '# msgs received', 'description': 'How many standard messages have been received from Node-RED?', },\n        msgsSentCtrl: { 'var': 'msgsSentCtrl', 'label': '# control msgs sent', 'description': 'How many control messages have been sent to Node-RED?', },\n        msgsCtrlReceived: { 'var': 'msgsCtrlReceived', 'label': '# control msgs received', 'description': 'How many control messages have been received from Node-RED?', },\n        originator: { 'var': 'originator', 'label': 'Node Originator', 'description': 'If the last msg from Node-RED was from a `uib-sender` node, this will be its node id so that messasges can be returned to it', },\n        topic: { 'var': 'topic', 'label': 'Default topic', 'description': 'Optional default topic to be included in outgoing standard messages', },\n\n        started: { 'var': 'started', 'label': 'Has uibuilder client started?', 'description': 'Whether `uibuilder.start()` ran successfully. This should self-run and should not need to be run manually', },\n        version: { 'var': 'version', 'label': 'uibuilder client version', 'description': 'The version of the loaded uibuilder client library', },\n        serverTimeOffset: { 'var': 'serverTimeOffset', 'label': 'Server time offset (Hrs)', 'description': 'The number of hours difference between the Node-red server and the client', },\n    }\n\n    // Track ui observers (see uiWatch)\n    #uiObservers = {}\n\n    //#endregion\n\n    //#region public class vars\n\n    // TODO Move to proper getters\n    //#region ---- Externally read-only (via .get method) ---- //\n    // version - moved to _meta\n    /** Client ID set by uibuilder on connect */\n    clientId = ''\n    /** The collection of cookies provided by uibuilder */\n    cookies = {}\n    /** Copy of last control msg object received from sever */\n    ctrlMsg = {}\n    /** Is Socket.IO client connected to the server? */\n    ioConnected = false\n    // Is the browser tab containing this page visible or not?\n    isVisible = false\n    // Remember the last page (re)load/navigation type: navigate, reload, back_forward, prerender\n    lastNavType = ''\n    /** Last std msg received from Node-RED */\n    msg = {}\n    /** number of messages sent to server since page load */\n    msgsSent = 0\n    /** number of messages received from server since page load */\n    msgsReceived = 0\n    /** number of control messages sent to server since page load */\n    msgsSentCtrl = 0\n    /** number of control messages received from server since page load */\n    msgsCtrlReceived = 0\n    /** Is the client online or offline? */\n    online = navigator.onLine\n    /** last control msg object sent via uibuilder.send() @since v2.0.0-dev3 */\n    sentCtrlMsg = {}\n    /** last std msg object sent via uibuilder.send() */\n    sentMsg = {}\n    /** placeholder to track time offset from server, see fn socket.on(ioChannels.server ...) */\n    serverTimeOffset = null\n    /** placeholder for a socket error message */\n    socketError = null\n    // tab identifier from session storage\n    tabId = ''\n    // Actual name of current page (set in constructor)\n    pageName = null\n    //#endregion ---- ---- ---- ---- //\n\n    // TODO Move to proper getters/setters\n    //#region ---- Externally Writable (via .set method, read via .get method) ---- //\n    /** Default originator node id - empty string by default\n     * @type {string}\n     */\n    originator = ''\n    /** Default topic - used by send if set and no topic provided\n     * @type {(string|undefined)}\n     */\n    topic = undefined\n    //#endregion ---- ---- ---- ---- //\n\n    //#region ---- These are unlikely to be needed externally: ----\n    autoSendReady = true\n    httpNodeRoot = '' // Node-RED setting (via cookie)\n    ioNamespace = ''\n    ioPath = ''\n    retryFactor = 1.5       // starting delay factor for subsequent reconnect attempts\n    retryMs = 2000          // starting retry ms period for manual socket reconnections workaround\n    storePrefix = 'uib_'    // Prefix for all uib-related localStorage\n    started = false\n    socketOptions = {\n        path: this.ioPath,\n        transports: ['polling', 'websocket'],\n        auth: {\n            clientVersion: version,\n            clientId: this.clientId,\n            pathName: window.location.pathname,\n            pageName: undefined,\n            tabId: undefined,\n            lastNavType: undefined,\n        },\n        transportOptions: {\n            // Can only set headers when polling\n            polling: {\n                extraHeaders: {\n                    'x-clientid': `${Uib._meta.displayName}; ${Uib._meta.type}; ${Uib._meta.version}; ${this.clientId}`,\n                }\n            },\n        },\n    }\n    //#endregion -- not external --\n\n    //#region ------- Static metadata ------- //\n    static _meta = {\n        version: version,\n        type: 'module',\n        displayName: 'uibuilder',\n    }\n\n    get meta() { return Uib._meta }\n    //#endregion ---- ---- ---- ---- //\n\n    //#endregion --- End of variables ---\n\n    //#region ------- Getters and Setters ------- //\n\n    // Change logging level dynamically (affects both console. and print.)\n    set logLevel(level) { logLevel = level; console.log('%c\u2757 info%c [logLevel]', `${LOG_STYLES.level} ${LOG_STYLES.info.css}`, `${LOG_STYLES.head} ${LOG_STYLES.info.txtCss}`, `Set to ${level} (${LOG_STYLES.names[level]})`) /* changeLogLevel(level)*/ }\n    get logLevel() { return logLevel }\n\n    // TODO Block setting of read-only vars\n    /** Function to set uibuilder properties to a new value - works on any property except _* or #*\n     * Also triggers any event listeners.\n     * Example: this.set('msg', {topic:'uibuilder', payload:42});\n     * @param {string} prop Any uibuilder property who's name does not start with a _ or #\n     * @param {*} val _\n     * @returns {*|undefined} Input value\n     */\n    set(prop, val) {\n        // Check for excluded properties - we don't want people to set these\n        // if (this.#excludedSet.indexOf(prop) !== -1) {\n        if (prop.startsWith('_') || prop.startsWith('#')) {\n            log('warn', 'Uib:set', `Cannot use set() on protected property \"${prop}\"`)()\n            return\n        }\n\n        this[prop] = val\n\n        log('trace', 'Uib:set', `prop set - prop: ${prop}, val: `, val)()\n\n        // Trigger this prop's event callbacks (listeners which are set by this.onChange)\n        // this.emit(prop, val)\n\n        // trigger an event on the prop name, pass both the name and value to the event details\n        this._dispatchCustomEvent('uibuilder:propertyChanged', { 'prop': prop, 'value': val })\n\n        return val\n    }\n\n    /** Function to get the value of a uibuilder property\n     * Example: uibuilder.get('msg')\n     * @param {string} prop The name of the property to get as long as it does not start with a _ or #\n     * @returns {*|undefined} The current value of the property\n     */\n    get(prop) {\n        if (prop.startsWith('_') || prop.startsWith('#')) {\n            log('warn', 'Uib:get', `Cannot use get() on protected property \"${prop}\"`)()\n            return\n        }\n        if (prop === 'version') return Uib._meta.version\n        if (prop === 'msgsCtrl') return this.msgsCtrlReceived\n        if (prop === 'reconnections') return this.connectedNum\n        if (this[prop] === undefined) {\n            log('warn', 'Uib:get', `get() - property \"${prop}\" does not exist`)()\n        }\n        return this[prop]\n    }\n\n    /** Write to localStorage if possible. console error output if can't write\n     * Also uses this.storePrefix\n     * @example\n     *   uibuilder.setStore('fred', 42)\n     *   console.log(uibuilder.getStore('fred'))\n     * @param {string} id localStorage var name to be used (prefixed with 'uib_')\n     * @param {*} value value to write to localstore\n     * @returns {boolean} True if succeeded else false\n     */\n    setStore(id, value) {\n        if (typeof value === 'object') {\n            try {\n                value = JSON.stringify(value)\n            } catch (e) {\n                log('error', 'Uib:setStore', 'Cannot stringify object, not storing. ', e)()\n                return false\n            }\n        }\n        try {\n            localStorage.setItem(this.storePrefix + id, value)\n            return true\n        } catch (e) {\n            log('error', 'Uib:setStore', 'Cannot write to localStorage. ', e)()\n            return false\n        }\n    } // --- end of setStore --- //\n\n    /** Attempt to get and re-hydrate a key value from localStorage\n     * Note that all uib storage is automatically prefixed using this.storePrefix\n     * @param {*} id The key of the value to attempt to retrieve\n     * @returns {*|null|undefined} The re-hydrated value of the key or null if key not found, undefined on error\n     */\n    getStore(id) {\n        try {\n            // @ts-ignore\n            return JSON.parse(localStorage.getItem(this.storePrefix + id))\n        } catch (e) { }\n        try {\n            return localStorage.getItem(this.storePrefix + id)\n        } catch (e) {\n            return undefined\n        }\n    }\n\n    /** Remove a given id from the uib keys in localStorage\n     * @param {*} id The key to remove\n     */\n    removeStore(id) {\n        try {\n            localStorage.removeItem(this.storePrefix + id)\n        } catch (e) { }\n    }\n\n    //#endregion ------- -------- ------- //\n\n    //#region ------- Our own event handling system ---------- //\n\n    // TODO Add option to send event details back to Node-RED as uib ctrl msg\n    /** Standard fn to create a custom event with details & dispatch it\n     * @param {string} title The event name\n     * @param {*} details Any details to pass to event output\n     */\n    _dispatchCustomEvent(title, details) {\n        const event = new CustomEvent(title, { detail: details })\n        document.dispatchEvent(event)\n    }\n\n    // See the this.#propChangeCallbacks & msgRecvdByTopicCallbacks private vars\n\n    /** Register on-change event listeners for uibuilder tracked properties\n     * Make it possible to register a function that will be run when the property changes.\n     * Note that you can create listeners for non-existant properties\n     * @example: uibuilder.onChange('msg', (msg) => { console.log('uibuilder.msg changed! It is now: ', msg) })\n     *\n     * @param {string} prop The property of uibuilder that we want to monitor\n     * @param {Function} callback The function that will run when the property changes, parameter is the new value of the property after change\n     * @returns {number} A reference to the callback to cancel, save and pass to uibuilder.cancelChange if you need to remove a listener\n     */\n    onChange(prop, callback) {\n        // Note: Property does not have to exist yet\n\n        // console.debug(`[Uib:onchange] pushing new callback (event listener) for property: ${prop}`)\n\n        // Create a new array or add to the array of callback functions for the property in the events object\n        // if (this.#events[prop]) {\n        //     this.#events[prop].push(callback)\n        // } else {\n        //     this.#events[prop] = [callback]\n        // }\n\n        // Make sure we have an object to receive the saved callback, update the latest reference number\n        if (!this.#propChangeCallbacks[prop]) this.#propChangeCallbacks[prop] = { _nextRef: 1 }\n        else this.#propChangeCallbacks[prop]._nextRef++\n\n        const nextCbRef = this.#propChangeCallbacks[prop]._nextRef\n\n        // Register the callback function. It is saved so that we can remove the event listener if we need to\n        const propChangeCallback = this.#propChangeCallbacks[prop][nextCbRef] = function propChangeCallback(e) {\n            // If the prop name matches the 1st arg in the onChange fn:\n            if (prop === e.detail.prop) {\n                const value = e.detail.value\n                // console.warn('[Uib:onChange:evt] uibuilder:propertyChanged. ', e.detail)\n                // Set the callback fn's `this` and its single argument to the msg\n                callback.call(value, value)\n            }\n        }\n\n        document.addEventListener('uibuilder:propertyChanged', propChangeCallback)\n\n        return nextCbRef\n    } // ---- End of onChange() ---- //\n\n    cancelChange(prop, cbRef) {\n        document.removeEventListener('uibuilder:propertyChanged', this.#propChangeCallbacks[prop][cbRef])\n        delete this.#propChangeCallbacks[prop][cbRef]\n        // this.#propChangeCallbacks[topic]._nextRef-- // Don't bother, let the ref# increase\n    }\n\n    /** Register a change callback for a specific msg.topic\n     * Similar to onChange but more convenient if needing to differentiate by msg.topic.\n     * @example: let otRef = uibuilder.onTopic('mytopic', function(){ console.log('Received a msg with msg.topic=`mytopic`. msg: ', this) })\n     * To cancel a change listener: uibuilder.cancelTopic('mytopic', otRef)\n     *\n     * @param {string} topic The msg.topic we want to listen for\n     * @param {Function} callback The function that will run when an appropriate msg is received. `this` inside the callback as well as the cb's single argument is the received msg.\n     * @returns {number} A reference to the callback to cancel, save and pass to uibuilder.cancelTopic if you need to remove a listener\n     */\n    onTopic(topic, callback) {\n        // Make sure we have an object to receive the saved callback, update the latest reference number\n        if (!this.#msgRecvdByTopicCallbacks[topic]) this.#msgRecvdByTopicCallbacks[topic] = { _nextRef: 1 }\n        else this.#msgRecvdByTopicCallbacks[topic]._nextRef++\n\n        const nextCbRef = this.#msgRecvdByTopicCallbacks[topic]._nextRef\n\n        // Register the callback function. It is saved so that we can remove the event listener if we need to\n        const msgRecvdEvtCallback = this.#msgRecvdByTopicCallbacks[topic][nextCbRef] = function msgRecvdEvtCallback(e) {\n            const msg = e.detail\n            // console.log('[Uib:onTopic:evt] uibuilder:stdMsgReceived where topic matches. ', e.detail)\n            if (msg.topic === topic) {\n                // Set the callback fn's `this` and its single argument to the msg\n                callback.call(msg, msg)\n            }\n        }\n\n        document.addEventListener('uibuilder:stdMsgReceived', msgRecvdEvtCallback)\n\n        return nextCbRef\n    }\n\n    cancelTopic(topic, cbRef) {\n        document.removeEventListener('uibuilder:stdMsgReceived', this.#msgRecvdByTopicCallbacks[topic][cbRef])\n        delete this.#msgRecvdByTopicCallbacks[topic][cbRef]\n        // this.#msgRecvdCallbacks[topic]._nextRef-- // Don't bother, let the ref# increase\n    }\n\n    /** Trigger event listener for a given property\n     * Called when uibuilder.set is used\n     *\n     * @param {*} prop The property for which to run the callback functions\n     * arguments: Additional arguments contain the value to pass to the event callback (e.g. newValue)\n     */\n    // emit(prop) {\n    //     var evt = this.#events[prop]\n    //     if (!evt) {\n    //         return\n    //     }\n    //     var args = Array.prototype.slice.call(arguments, 1)\n    //     for (var i = 0; i < evt.length; i++) {\n    //         evt[i].apply(this, args)\n    //     }\n    //     log('trace', 'Uib:emit', `${evt.length} listeners run for prop ${prop} `)()\n    // }\n\n    /** Forcably removes all event listeners from the events array\n     * Use if you need to re-initialise the environment\n     */\n    // clearEventListeners() {\n    //     this.#events = []\n    // } // ---- End of clearEventListeners() ---- //\n\n    /** Clear a single property event listeners\n     * @param {string} prop The property of uibuilder for which we want to clear the event listener\n     */\n    // clearListener(prop) {\n    //     if (this.#events[prop]) delete this.#events[prop]\n    // }\n\n    //#endregion ---------- End of event handling system ---------- //\n\n    //#region ------- General Utility Functions -------- //\n\n    /** Check supplied msg from server for a timestamp - if received, work out & store difference to browser time\n     * @param {object} receivedMsg A message object recieved from Node-RED\n     * @returns {void} Updates self.serverTimeOffset if different to previous value\n     */\n    _checkTimestamp(receivedMsg) {\n        if (Object.prototype.hasOwnProperty.call(receivedMsg, 'serverTimestamp')) {\n            const serverTimestamp = new Date(receivedMsg.serverTimestamp)\n            // @ts-ignore\n            const offset = Math.round(((new Date()) - serverTimestamp) / 3600000) // in ms / 3.6m to get hours\n            if (offset !== this.serverTimeOffset) {\n                log('trace', `Uib:checkTimestamp:${this._ioChannels.server} (server)`, `Offset changed to: ${offset} from: ${this.serverTimeOffset}`)()\n                this.set('serverTimeOffset', offset)\n            }\n        }\n    }\n\n    /** Simplistic jQuery-like document CSS query selector, returns an HTML Element\n     * If the selected element is a <template>, returns the first child element.\n     * type {HTMLElement}\n     * @param {string} cssSelector A CSS Selector that identifies the element to return\n     * @returns {HTMLElement|HTMLTemplateElement|null} Selected element or null\n     */\n    $(cssSelector) {\n        let el = document.querySelector(cssSelector)\n\n        if (!el) {\n            log(1, 'Uib:$', `No element found for CSS selector ${cssSelector}`)()\n            return null\n        }\n\n        if ( el.nodeName === 'TEMPLATE' ) {\n            el = el.content.firstElementChild\n            if (!el) {\n                log(0, 'Uib:$', `Template selected for CSS selector ${cssSelector} but it is empty`)()\n                return null\n            }\n        }\n\n        return el\n    }\n    // $ = document.querySelector.bind(document)\n\n    /** Set the default originator. Set to '' to ignore. Used with uib-sender.\n     * @param {string} [originator] A Node-RED node ID to return the message to\n     */\n    setOriginator(originator = '') {\n        this.set('originator', originator)\n    } // ---- End of setOriginator ---- //\n\n    /** HTTP Ping/Keep-alive - makes a call back to uibuilder's ExpressJS server and receives a 204 response\n     * Can be used to keep sessions alive.\n     * @example\n     *   uibuilder.setPing(2000) // repeat every 2 sec. Re-issue with ping(0) to turn off repeat.\n     *   uibuilder.onChange('ping', function(data) {\n     *      console.log('pinger', data)\n     *   })\n     * @param {number} ms Repeat interval in ms\n     */\n    setPing(ms = 0) {\n        const oReq = new XMLHttpRequest()\n        oReq.addEventListener('load', () => {\n            const headers = (oReq.getAllResponseHeaders()).split('\\r\\n')\n            const elapsedTime = Number(new Date()) - Number((oReq.responseURL.split('='))[1])\n            this.set('ping', {\n                success: !!((oReq.status === 201) || (oReq.status === 204)), // true if one of the listed codes else false\n                status: oReq.status,\n                headers: headers,\n                url: oReq.responseURL,\n                elapsedTime: elapsedTime,\n            })\n        })\n\n        if (this.#pingInterval) {\n            clearInterval(this.#pingInterval)\n            this.#pingInterval = undefined\n        }\n\n        oReq.open('GET', `${this.httpNodeRoot}/uibuilder/ping?t=${Number(new Date())}`)\n        oReq.send()\n\n        if (ms > 0) {\n            this.#pingInterval = setInterval(() => {\n                oReq.open('GET', `${this.httpNodeRoot}/uibuilder/ping?t=${Number(new Date())}`)\n                oReq.send()\n            }, ms)\n        }\n    } // ---- End of ping ---- //\n\n    log() {\n        log(...arguments)()\n    }\n\n    /** Convert JSON to Syntax Highlighted HTML\n     * @param {object} json A JSON/JavaScript Object\n     * @returns {html} Object reformatted as highlighted HTML\n     */\n    syntaxHighlight(json) {\n        json = JSON.stringify(json, undefined, 4)\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;') // eslint-disable-line newline-per-chained-call\n        json = json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g, function (match) { // eslint-disable-line prefer-named-capture-group\n            let cls = 'number'\n            if ((/^\"/).test(match)) {\n                if ((/:$/).test(match)) {\n                    cls = 'key'\n                } else {\n                    cls = 'string'\n                }\n            } else if ((/true|false/).test(match)) {\n                cls = 'boolean'\n            } else if ((/null/).test(match)) {\n                cls = 'null'\n            }\n            return '<span class=\"' + cls + '\">' + match + '</span>'\n        })\n        return json\n    } // --- End of syntaxHighlight --- //\n\n    //#endregion -------- -------- -------- //\n\n    //#region ------- UI handlers --------- //\n\n    /** Directly manage UI via JSON\n     * @param {object} json Either an object containing {_ui: {}} or simply simple {} containing ui instructions\n     */\n    ui(json) {\n        // Simulate a msg and process\n        let msg = {}\n        if ( json._ui ) msg = json\n        else msg._ui = json\n\n        this._uiManager(msg)\n    }\n\n    // TODO Add multi-slot\n    /** Replace or add an HTML element's slot from text or an HTML string\n     * Will use DOMPurify if that library has been loaded to window.\n     * param {*} ui Single entry from the msg._ui property\n     * @param {Element} el Reference to the element that we want to update\n     * @param {*} component The component we are trying to add/replace\n     */\n    replaceSlot(el, component) {\n        if (!component.slot) return\n\n        // If DOMPurify is loaded, apply it now\n        if (window['DOMPurify']) component.slot = window['DOMPurify'].sanitize(component.slot)\n        // Set the component content to the msg.payload or the slot property\n        el.innerHTML = component.slot\n    }\n\n    /** Replace or add an HTML element's slot from a Markdown string\n     * Only does something if the markdownit library has been loaded to window.\n     * Will use DOMPurify if that library has been loaded to window.\n     * @param {Element} el Reference to the element that we want to update\n     * @param {*} component The component we are trying to add/replace\n     */\n    replaceSlotMarkdown(el, component) {\n        if (!window['markdownit']) return\n        if (!component.slotMarkdown) return\n\n        const opts = { // eslint-disable-line object-shorthand\n            html: true,\n            linkify: true,\n            _highlight: true,\n            langPrefix: 'language-',\n            highlight(str, lang) {\n                if (lang && window['hljs'] && window['hljs'].getLanguage(lang)) {\n                    try {\n                        return `<pre class=\"highlight\" data-language=\"${lang.toUpperCase()}\">\n                                <code class=\"language-${lang}\">${window['hljs'].highlightAuto(str).value}</code></pre>`\n                    } finally { } // eslint-disable-line no-empty\n                }\n                return `<pre class=\"highlight\"><code>${md.utils.escapeHtml(str)}</code></pre>`\n            },\n        }\n        const md = window['markdownit'](opts)\n        // Convert from markdown to HTML\n        component.slotMarkdown = md.render(component.slotMarkdown)\n        // If DOMPurify is loaded, apply it now\n        if (window['DOMPurify']) component.slotMarkdown = window['DOMPurify'].sanitize(component.slotMarkdown)\n        // Set the component content to the the converted slotMarkdown property\n        el.innerHTML = component.slotMarkdown\n    }\n\n    /** Attach a new remote script to the end of HEAD synchronously\n     * NOTE: It takes too long for most scripts to finish loading\n     *       so this is pretty useless to work with the dynamic UI features directly.\n     * @param {string} url The url to be used in the script src attribute\n     */\n    loadScriptSrc(url) {\n        const newScript = document.createElement('script')\n        newScript.src = url\n        newScript.async = false\n        document.head.appendChild(newScript)\n    }\n\n    /** Attach a new remote stylesheet link to the end of HEAD synchronously\n     * NOTE: It takes too long for most scripts to finish loading\n     *       so this is pretty useless to work with the dynamic UI features directly.\n     * @param {string} url The url to be used in the style link href attribute\n     */\n    loadStyleSrc(url) {\n        const newStyle = document.createElement('link')\n        newStyle.href = url\n        newStyle.rel = 'stylesheet'\n        newStyle.type = 'text/css'\n\n        document.head.appendChild(newStyle)\n    }\n\n    /** Attach a new text script to the end of HEAD synchronously\n     * NOTE: It takes too long for most scripts to finish loading\n     *       so this is pretty useless to work with the dynamic UI features directly.\n     * @param {string} textFn The text to be loaded as a script\n     */\n    loadScriptTxt(textFn) {\n        const newScript = document.createElement('script')\n        newScript.async = false\n        newScript.textContent = textFn\n        document.head.appendChild(newScript)\n    }\n\n    /** Attach a new text stylesheet to the end of HEAD synchronously\n     * NOTE: It takes too long for most scripts to finish loading\n     *       so this is pretty useless to work with the dynamic UI features directly.\n     * @param {string} textFn The text to be loaded as a stylesheet\n     */\n    loadStyleTxt(textFn) {\n        const newStyle = document.createElement('style')\n        newStyle.textContent = textFn\n        document.head.appendChild(newStyle)\n    }\n\n    // TODO - Allow notify to sit in corners rather than take over the screen\n    /** Show a pop-over \"toast\" dialog or a modal alert\n     * Refs: https://www.w3.org/WAI/ARIA/apg/example-index/dialog-modal/alertdialog.html,\n     *       https://www.w3.org/WAI/ARIA/apg/example-index/dialog-modal/dialog.html,\n     *       https://www.w3.org/WAI/ARIA/apg/patterns/dialogmodal/\n     * @param {\"notify\"|\"alert\"} type Dialog type\n     * @param {object} ui standardised ui data\n     * @param {object} [msg] msg.payload/msg.topic - only used if a string. Optional.\n     * @returns {void}\n     */\n    showDialog(type, ui, msg) {\n\n        //#region -- Check properties --\n\n        let content = ''\n        // Main body content\n        if ( msg.payload && typeof msg.payload === 'string' ) content += msg.payload\n        if ( ui.content ) content += ui.content\n        // Toast wont show anyway if content is empty, may as well warn user\n        if ( content === '' ) {\n            log(1, 'Uib:showDialog', 'Toast content is blank. Not shown.')()\n            return\n        }\n\n        // Use msg.topic as title if no title provided\n        if ( !ui.title && msg.topic ) ui.title = msg.topic\n        if ( ui.title ) content = `<p class=\"toast-head\">${ui.title}</p><p>${content}</p>`\n\n        // Allow for variants - @since v6.1 - don't bother - since this now sets CSS class, not tied to bootstrap-vue\n        // if ( !ui.variant || !['', 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'].includes(ui.variant)) ui.variant = ''\n\n        // Toasts auto-hide by default after 10s but alerts do not auto-hide\n        if ( ui.noAutohide ) ui.noAutoHide = ui.noAutohide\n        if ( ui.noAutoHide ) ui.autohide = !ui.noAutoHide\n        // If set, number of ms until toast is auto-hidden\n        if ( ui.autoHideDelay ) {\n            if ( !ui.autohide ) ui.autohide = true\n            ui.delay = ui.autoHideDelay\n        } else ui.autoHideDelay = 10000 // default = 10s\n        if ( !Object.prototype.hasOwnProperty.call(ui, 'autohide') ) ui.autohide = true\n\n        if ( type === 'alert' ) {\n            ui.modal = true\n            ui.autohide = false\n            content = `<svg viewBox=\"0 0 192.146 192.146\" style=\"width:30;background-color:transparent;\"><path d=\"M108.186 144.372c0 7.054-4.729 12.32-12.037 12.32h-.254c-7.054 0-11.92-5.266-11.92-12.32 0-7.298 5.012-12.31 12.174-12.31s11.91 4.992 12.037 12.31zM88.44 125.301h15.447l2.951-61.298H85.46l2.98 61.298zm101.932 51.733c-2.237 3.664-6.214 5.921-10.493 5.921H12.282c-4.426 0-8.51-2.384-10.698-6.233a12.34 12.34 0 0 1 .147-12.349l84.111-149.22c2.208-3.722 6.204-5.96 10.522-5.96h.332c4.445.107 8.441 2.618 10.513 6.546l83.515 149.229c1.993 3.8 1.905 8.363-.352 12.066zm-10.493-6.4L96.354 21.454l-84.062 149.18h167.587z\" /></svg> ${content}`\n        }\n\n        //#endregion -- -- --\n\n        // Create a toaster container element if not already created - or get a ref to it\n        let toaster = document.getElementById('toaster')\n        if ( toaster === null ) {\n            toaster = document.createElement('div')\n            toaster.id = 'toaster'\n            toaster.title = 'Click to clear all notifcations'\n            toaster.setAttribute('class', 'toaster')\n            toaster.setAttribute('role', 'dialog')\n            toaster.setAttribute('arial-label', 'Toast message')\n            toaster.onclick = function() {\n                // @ts-ignore\n                toaster.remove()\n            }\n            document.body.insertAdjacentElement('afterbegin', toaster)\n        }\n\n        // Create a toast element. Would be nice to use <dialog> but that isn't well supported yet - come on Apple!\n        const toast = document.createElement('div')\n        toast.title = 'Click to clear this notifcation'\n        toast.setAttribute('class', `toast ${ui.variant ? ui.variant : ''} ${type}`)\n        toast.innerHTML = content\n        toast.setAttribute('role', 'alertdialog')\n        if ( ui.modal ) toast.setAttribute('aria-modal', ui.modal)\n        toast.onclick = function(evt) {\n            evt.stopPropagation()\n            toast.remove()\n            // @ts-ignore\n            if ( toaster.childElementCount < 1 ) toaster.remove()\n        }\n\n        // TODO\n        if (type === 'alert') {\n            // newD.setAttribute('aria-labelledby', '')\n            // newD.setAttribute('aria-describedby', '')\n        }\n\n        toaster.insertAdjacentElement(ui.appendToast === true ? 'beforeend' : 'afterbegin', toast)\n\n        // Auto-hide\n        if ( ui.autohide === true ) {\n            setInterval( () => {\n                toast.remove()\n                // @ts-ignore\n                if ( toaster.childElementCount < 1 ) toaster.remove()\n            }, ui.autoHideDelay)\n        }\n\n    } // --- End of showDialog ---\n\n    /** Load a dynamic UI from a JSON web reponse\n     * @param {string} url URL that will return the ui JSON\n     */\n    loadui(url) {\n\n        fetch(url)\n            .then(response => {\n                if (response.ok === false) {\n                    // log('warn', 'Uib:loadui:then1', `Could not load '${url}'. Status ${response.status}, Error: ${response.statusText}`)()\n                    throw new Error(`Could not load '${url}'. Status ${response.status}, Error: ${response.statusText}`)\n                }\n\n                log('trace', 'Uib:loadui:then1', `Loaded '${url}'. Status ${response.status}, ${response.statusText}`)()\n                // Did we get json?\n                const contentType = response.headers.get('content-type')\n                if (!contentType || !contentType.includes('application/json')) {\n                    throw new TypeError(`Fetch '${url}' did not return JSON, ignoring`)\n                }\n                // Returns parsed json to next .then\n                return response.json()\n            })\n            .then(data => {\n                if (data !== undefined) {\n                    log('trace', 'Uib:loadui:then2', 'Parsed JSON successfully obtained')()\n                    // Call the _uiManager\n                    this._uiManager({ _ui: data })\n                    return true\n                }\n                return false\n            })\n            .catch(err => {\n                log('warn', 'Uib:loadui:catch', 'Error. ', err)()\n            })\n\n    } // --- end of loadui\n\n    /** Enhance an HTML element that is being composed with ui data\n     *  such as ID, attribs, event handlers, custom props, etc.\n     * @param {HTMLElement} el HTML Element to enhance\n     * @param {*} comp Individual uibuilder ui component spec\n     */\n    _uiComposeComponent(el, comp) {\n        // Add attributes\n        if (comp.attributes) {\n            Object.keys(comp.attributes).forEach((attrib) => {\n                // For values, set the actual value as well since the attrib only changes the DEFAULT value\n                // @ts-ignore\n                if (attrib === 'value') el.value = comp.attributes[attrib]\n                el.setAttribute(attrib, comp.attributes[attrib])\n            })\n        }\n\n        // ID if set\n        if (comp.id) el.setAttribute('id', comp.id)\n\n        // Add event handlers\n        if (comp.events) {\n            Object.keys(comp.events).forEach((type) => {\n                // @ts-ignore  I'm forever getting this wrong!\n                if (type.toLowerCase === 'onclick') type = 'click'\n                // Add the event listener\n                try {\n                    el.addEventListener(type, (evt) => {\n                        // Use new Function to ensure that esbuild works: https://esbuild.github.io/content-types/#direct-eval\n                        (new Function('evt', `${comp.events[type]}(evt)`))(evt) // eslint-disable-line no-new-func\n                    })\n                    // newEl.setAttribute( 'onClick', `${comp.events[type]}()` )\n                } catch (err) {\n                    log('error', 'Uib:_uiComposeComponent', `Add event '${type}' for element '${comp.type}': Cannot add event handler. ${err.message}`)()\n                }\n            })\n        }\n\n        // Add custom properties to the dataset\n        if (comp.properties) {\n            Object.keys(comp.properties).forEach((prop) => {\n                // TODO break a.b into sub properties\n                el[prop] = comp.properties[prop]\n            })\n        }\n\n        //#region Add Slot content to innerHTML\n        if (comp.slot) {\n            this.replaceSlot(el, comp)\n        }\n        //#endregion\n\n        // TODO Add multi-slot capability (default slot must always be processed first as innerHTML is replaced)\n\n        //#region Add Slot Markdown content to innerHTML IF marked library is available\n        if (comp.slotMarkdown) {\n            this.replaceSlotMarkdown(el, comp)\n        }\n        //#endregion\n    }\n\n    /** Extend an HTML Element with appended elements using ui components\n     * NOTE: This fn follows a strict hierarchy of added components.\n     * @param {HTMLElement} parentEl The parent HTML Element we want to append to\n     * @param {*} components The ui component(s) we want to add\n     * @param {string} [ns] Optional. The namespace to use.\n     */\n    _uiExtendEl(parentEl, components, ns = '') {\n        components.forEach( (compToAdd, i) => {\n            /** @type {HTMLElement} Create the new component */\n            let newEl\n\n            if (compToAdd.type === 'html') {\n                newEl = parentEl\n                // newEl.outerHTML = compToAdd.slot\n                parentEl.innerHTML = compToAdd.slot\n            } else if (compToAdd.type === 'svg' || ns === 'svg') {\n                ns = 'svg'\n                newEl = document.createElementNS(\"http://www.w3.org/2000/svg\", compToAdd.type)\n                // Updates newEl\n                this._uiComposeComponent(newEl, compToAdd)\n                parentEl.appendChild(newEl)\n            } else {\n                newEl = document.createElement(compToAdd.type === 'html' ? 'div' : compToAdd.type)\n                // Updates newEl\n                this._uiComposeComponent(newEl, compToAdd)\n                parentEl.appendChild(newEl)\n            }\n\n            // If nested components, go again - but don't pass payload to sub-components\n            if (compToAdd.components) {\n                this._uiExtendEl(newEl, compToAdd.components)\n            }\n        } )\n    }\n\n    // Vue dynamic inserts Don't really work ...\n    // _uiAddVue(ui, isRecurse) {\n\n    //     // must be Vue\n    //     // must have only 1 root element\n    //     const compToAdd = ui.components[0]\n    //     const newEl = document.createElement(compToAdd.type)\n\n    //     if (!compToAdd.slot && ui.payload) compToAdd.slot = ui.payload\n    //     this._uiComposeComponent(newEl, compToAdd)\n\n    //     // If nested components, go again - but don't pass payload to sub-components\n    //     if (compToAdd.components) {\n    //         this._uiExtendEl(newEl, compToAdd.components)\n    //     }\n\n    //     console.log('MAGIC: ', this.magick, newEl, newEl.outerHTML)\n    //     this.set('magick', newEl.outerHTML)\n\n    //     // if (compToAdd.id) newEl.setAttribute('ref', compToAdd.id)\n    //     // if (elParent.id) newEl.setAttribute('data-parent', elParent.id)\n    // }\n\n    // TODO Add check if ID already exists\n    // TODO Allow single add without using components array\n    /** Handle incoming msg._ui add requests\n     * @param {*} ui Standardised msg._ui property object. Note that payload and topic are appended to this object\n     * @param {boolean} isRecurse Is this a recursive call?\n     */\n    _uiAdd(ui, isRecurse) {\n        log('trace', 'Uib:_uiManager:add', 'Starting _uiAdd')()\n\n        // Vue dynamic inserts Don't really work ...\n        // if (this.#isVue && !isRecurse) {\n        //     this._uiAddVue(ui, false)\n        //     return\n        // }\n\n        ui.components.forEach((compToAdd, i) => {\n            log('trace', `_uiAdd:components-forEach:${i}`, 'Component to add: ', compToAdd)()\n\n            /** @type {HTMLElement} Create the new component */\n            let newEl\n            let ns = '' // namespace\n            switch (compToAdd.type) {\n                // If trying to insert raw html, wrap in a div\n                case 'html': {\n                    newEl = document.createElement('div')\n                    break\n                }\n\n                // If trying to insert raw svg, need to create in namespace\n                case 'svg': {\n                    ns = 'svg'\n                    newEl = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg')\n                    break\n                }\n\n                default: {\n                    newEl = document.createElement(compToAdd.type)\n                    break\n                }\n            }\n\n            if (!compToAdd.slot && ui.payload) compToAdd.slot = ui.payload\n\n            // const parser = new DOMParser()\n            // const newDoc = parser.parseFromString(compToAdd.slot, 'text/html')\n            // console.log(compToAdd, newDoc.body)\n\n            this._uiComposeComponent(newEl, compToAdd)\n\n            /** @type {HTMLElement} Where to add the new element? */\n            let elParent\n            if (compToAdd.parentEl) {\n                elParent = compToAdd.parentEl\n            } else if (ui.parentEl) {\n                elParent = ui.parentEl\n            } else if (compToAdd.parent) {\n                elParent = document.querySelector(compToAdd.parent)\n            } else if (ui.parent) {\n                elParent = document.querySelector(ui.parent)\n            }\n            if (!elParent) {\n                log('info', 'Uib:_uiAdd', 'No parent found, adding to body')()\n                elParent = document.querySelector('body')\n            }\n\n            if ( compToAdd.position && compToAdd.position === 'first') {\n                // Insert new el before the first child of the parent. Ref: https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore#example_3\n                elParent.insertBefore(newEl, elParent.firstChild)\n            } else if ( compToAdd.position && Number.isInteger(Number(compToAdd.position)) ) {\n                elParent.insertBefore(newEl, elParent.children[compToAdd.position])\n            } else {\n                // Append to the required parent\n                elParent.appendChild(newEl)\n            }\n\n            // If nested components, go again - but don't pass payload to sub-components\n            if (compToAdd.components) {\n                // this._uiAdd({\n                //     method: ui.method,\n                //     parentEl: newEl,\n                //     components: compToAdd.components,\n                // }, true)\n                this._uiExtendEl(newEl, compToAdd.components, ns)\n            }\n        })\n\n    } // --- end of _uiAdd ---\n\n    // TODO Add better tests for failures (see comments)\n    /** Handle incoming _ui remove requests\n     * @param {*} ui Standardised msg._ui property object. Note that payload and topic are appended to this object\n     * @param {boolean} all Optional, default=false. If true, will remove ALL found elements, otherwise only the 1st is removed\n     */\n    _uiRemove(ui, all = false) {\n        ui.components.forEach((compToRemove) => {\n            let els\n            if (all !== true) els = [document.querySelector(compToRemove)]\n            else els = document.querySelectorAll(compToRemove)\n\n            els.forEach( el => {\n                try {\n                    el.remove()\n                } catch (err) {\n                    // Could not remove. Cannot read properties of null <= no need to report this one\n                    // Could not remove. Failed to execute 'querySelector' on 'Document': '##testbutton1' is not a valid selector\n                    log('trace', 'Uib:_uiRemove', `Could not remove. ${err.message}`)()\n                }\n            })\n        })\n    } // --- end of _uiRemove ---\n\n    /** Handle incoming _ui replace requests\n     * @param {*} ui Standardised msg._ui property object. Note that payload and topic are appended to this object\n     */\n    _uiReplace(ui) {\n        log('trace', '_uiReplace', 'Starting')()\n\n        ui.components.forEach((compToReplace, /** @type {number} */ i) => {\n            log('trace', `_uiReplace:components-forEach:${i}`, 'Component to replace: ', compToReplace)()\n\n            /** @type {HTMLElement} */\n            let elToReplace\n\n            // Either the id, CSS selector, name or type (element type) must be given in order to identify the element to change. FIRST element matching is updated.\n            if ( compToReplace.id ) {\n                elToReplace = document.getElementById(compToReplace.id) // .querySelector(`#${compToReplace.id}`)\n            } else if ( compToReplace.selector || compToReplace.select ) {\n                elToReplace = document.querySelector(compToReplace.selector)\n            } else if ( compToReplace.name ) {\n                elToReplace = document.querySelector(`[name=\"${compToReplace.name}\"]`)\n            } else if ( compToReplace.type ) {\n                elToReplace = document.querySelector(compToReplace.type)\n            }\n\n            log('trace', `_uiReplace:components-forEach:${i}`, 'Element to replace: ', elToReplace)()\n\n            // Nothing was found so ADD the element instead\n            if ( elToReplace === undefined || elToReplace === null ) {\n                log('trace', `Uib:_uiReplace:components-forEach:${i}:noReplace`, 'Cannot find the DOM element. Adding instead.', compToReplace)()\n                this._uiAdd({ components: [compToReplace] }, false)\n                return\n            }\n\n            /** @type {HTMLElement} Create the new component */\n            let newEl\n            let ns = '' // namespace\n            switch (compToReplace.type) {\n                // If trying to insert raw html, wrap in a div\n                case 'html': {\n                    newEl = document.createElement('div')\n                    break\n                }\n\n                // If trying to insert raw svg, need to create in namespace\n                case 'svg': {\n                    ns = 'svg'\n                    newEl = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg')\n                    break\n                }\n\n                default: {\n                    newEl = document.createElement(compToReplace.type)\n                    break\n                }\n            }\n\n            // Updates the newEl and maybe the ui\n            this._uiComposeComponent(newEl, compToReplace)\n\n            // Replace the current element\n            elToReplace.replaceWith(newEl)\n\n            // If nested components, go again - but don't pass payload to sub-components\n            if (compToReplace.components) {\n                this._uiExtendEl(newEl, compToReplace.components, ns)\n            }\n        })\n\n    } // --- end of _uiReplace ---\n\n    // TODO Allow single add without using components array\n    // TODO Allow sub-components\n    // TODO Add multi-slot capability\n    /** Handle incoming _ui update requests\n     * @param {*} ui Standardised msg._ui property object. Note that payload and topic are appended to this object\n     */\n    _uiUpdate(ui) {\n        log('trace', 'Uib:_uiManager:update', 'Starting _uiUpdate')()\n\n        // We allow an update not to actually need to spec a component\n        if ( !ui.components ) ui.components = [Object.assign({}, ui)]\n\n        ui.components.forEach((compToUpd, i) => {\n            log('trace', '_uiUpdate:components-forEach', `Component #${i}`, compToUpd)()\n\n            /** @type {NodeListOf<Element>} */\n            let elToUpd\n\n            // Either the id, CSS selector, name or type (element type) must be given in order to identify the element to change. ALL elements matching are updated.\n            if ( compToUpd.id ) {\n                // NB We don't use get by id because this way the code is simpler later on\n                elToUpd = document.querySelectorAll(`#${compToUpd.id}`)\n            } else if ( compToUpd.selector || compToUpd.select ) {\n                elToUpd = document.querySelectorAll(compToUpd.selector)\n            } else if ( compToUpd.name ) {\n                elToUpd = document.querySelectorAll(`[name=\"${compToUpd.name}\"]`)\n            } else if ( compToUpd.type ) {\n                elToUpd = document.querySelectorAll(compToUpd.type)\n            }\n\n            // @ts-ignore Nothing was found so give up\n            if ( elToUpd === undefined || elToUpd.length < 1 ) {\n                log('warn', 'Uib:_uiManager:update', 'Cannot find the DOM element. Ignoring.', compToUpd)()\n                return\n            }\n\n            log('trace', '_uiUpdate:components-forEach', `Element(s) to update. Count: ${elToUpd.length}`, elToUpd)()\n\n            // If slot not specified but payload is, use the payload in the slot\n            if (!compToUpd.slot && compToUpd.payload) compToUpd.slot = compToUpd.payload\n\n            // Might have >1 element to update - so update them all\n            elToUpd.forEach( el => {\n                this._uiComposeComponent(el, compToUpd)\n            })\n\n            // If nested components, go again - but don't pass payload to sub-components\n            if (compToUpd.components) {\n                elToUpd.forEach( el => {\n                    log('trace', '_uiUpdate:components', 'el', el)()\n                    this._uiUpdate({\n                        method: ui.method,\n                        parentEl: el,\n                        components: compToUpd.components,\n                    })\n                })\n            }\n\n        })\n\n    } // --- end of _uiUpdate ---\n\n    // TODO Add more error handling and parameter validation\n    /** Handle incoming _ui load requests\n     * Can load JavaScript modules, JavaScript scripts and CSS.\n     * @param {*} ui Standardised msg._ui property object. Note that payload and topic are appended to this object\n     */\n    _uiLoad(ui) {\n\n        // Self-loading ECMA Modules (e.g. web components)\n        if (ui.components) {\n            if (!Array.isArray(ui.components)) ui.components = [ui.components]\n\n            ui.components.forEach(async component => {\n                await import(component)\n            })\n        }\n        // Remote Scripts\n        if (ui.srcScripts) {\n            if (!Array.isArray(ui.srcScripts)) ui.srcScripts = [ui.srcScripts]\n\n            ui.srcScripts.forEach(script => {\n                this.loadScriptSrc(script)\n            })\n        }\n        // Scripts passed as text\n        if (ui.txtScripts) {\n            if (!Array.isArray(ui.txtScripts)) ui.txtScripts = [ui.txtScripts]\n\n            this.loadScriptTxt(ui.txtScripts.join('\\n'))\n        }\n        // Remote Stylesheets\n        if (ui.srcStyles) {\n            if (!Array.isArray(ui.srcStyles)) ui.srcStyles = [ui.srcStyles]\n\n            ui.srcStyles.forEach(sheet => {\n                this.loadStyleSrc(sheet)\n            })\n        }\n        // Styles passed as text\n        if (ui.txtStyles) {\n            if (!Array.isArray(ui.txtStyles)) ui.txtStyles = [ui.txtStyles]\n\n            this.loadStyleTxt(ui.txtStyles.join('\\n'))\n        }\n\n    } // --- end of _uiLoad ---\n\n    /** Handle a reload request */\n    _uiReload() {\n        log('trace', 'Uib:uiManager:reload', 'reloading')()\n        location.reload()\n    }\n\n    /** Handle incoming _ui messages and loaded UI JSON files\n     * Called from start()\n     * @param {*} msg Standardised msg object containing a _ui property object\n     */\n    _uiManager(msg) {\n        if (!msg._ui) return\n\n        // Make sure that _ui is an array\n        if (!Array.isArray(msg._ui)) msg._ui = [msg._ui]\n\n        msg._ui.forEach((ui, i) => {\n            if (!ui.method) {\n                log('warn', 'Uib:_uiManager', `No method defined for msg._ui[${i}]. Ignoring`)()\n                return\n            }\n\n            ui.payload = msg.payload\n            ui.topic = msg.topic\n            this._dispatchCustomEvent(\n                `uibuilder:msg:_ui:${ui.method}${ui.id ? `:${ui.id}` : ''}`,\n                ui\n            )\n\n            switch (ui.method) {\n                case 'add': {\n                    this._uiAdd(ui, false)\n                    break\n                }\n\n                case 'remove': {\n                    this._uiRemove(ui, false)\n                    break\n                }\n\n                case 'removeAll': {\n                    this._uiRemove(ui, true)\n                    break\n                }\n\n                case 'replace': {\n                    this._uiReplace(ui)\n                    break\n                }\n\n                case 'update': {\n                    this._uiUpdate(ui)\n                    break\n                }\n\n                case 'load': {\n                    this._uiLoad(ui)\n                    break\n                }\n\n                case 'reload': {\n                    this._uiReload()\n                    break\n                }\n\n                case 'notify': {\n                    this.showDialog('notify', ui, msg)\n                    break\n                }\n\n                case 'alert': {\n                    this.showDialog('alert', ui, msg)\n                    break\n                }\n\n                default: {\n                    log('error', 'Uib:_uiManager', `Invalid msg._ui[${i}].method (${ui.method}). Ignoring`)()\n                    break\n                }\n            }\n        })\n\n    } // --- end of _uiManager ---\n\n    /** Show/hide a display card on the end of the visible HTML that will dynamically display the last incoming msg from Node-RED\n     * The card has the id `uib_last_msg`. Updates are done from a listener set up in the start function.\n     * @param {boolean|undefined} showHide true=show, false=hide. undefined=toggle.\n     * @param {string|undefined} parent Optional. If not undefined, a CSS selector to attach the display to. Defaults to `body`\n     */\n    showMsg(showHide, parent = 'body') {\n        if ( showHide === undefined ) showHide = !this.#isShowMsg\n        this.#isShowMsg = showHide\n        let slot = 'Waiting for a message from Node-RED'\n\n        if (this.msg && Object.keys(this.msg).length > 0) {\n            slot = this.syntaxHighlight(this.msg)\n        }\n\n        if ( showHide === false ) {\n            this._uiRemove( {\n                components: [\n                    '#uib_last_msg',\n                ],\n            })\n        } else {\n            this._uiReplace({\n                components: [\n                    {\n                        type: 'pre',\n                        id: 'uib_last_msg',\n                        parent: parent,\n                        attributes: {\n                            title: 'Last message from Node-RED',\n                            class: 'syntax-highlight',\n                        },\n                        slot: slot,\n                    }\n                ]\n            })\n        }\n    }\n\n    /** Show/hide a display card on the end of the visible HTML that will dynamically display the current status of the uibuilder client\n     * The card has the id `uib_status`.\n     * The display is updated by an event listener created in the class constructor.\n     * @param {boolean|undefined} showHide true=show, false=hide. undefined=toggle.\n     * @param {string|undefined} parent Optional. If not undefined, a CSS selector to attach the display to. Defaults to `body`\n     */\n    showStatus(showHide, parent = 'body') {\n        if ( showHide === undefined ) showHide = !this.#isShowStatus\n        this.#isShowStatus = showHide\n\n        if ( showHide === false ) {\n            this._uiRemove( {\n                components: [\n                    '#uib_status',\n                ],\n            })\n            return\n        }\n\n        const root = {\n            components: [\n                {\n                    type: 'div',\n                    id: 'uib_status',\n                    parent: parent,\n                    attributes: {\n                        title: 'Current status of the uibuilder client',\n                        class: 'text-smaller',\n                    },\n                    components: [\n                        {\n                            'type': 'table',\n                            'components': [\n                                {\n                                    'type': 'tbody',\n                                    'components': []\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n        const details = root.components[0].components[0].components[0].components\n\n        Object.values(this.#showStatus).forEach( entry => {\n            details.push({\n                'type': 'tr',\n                'attributes': {\n                    title: entry.description,\n                },\n                'components': [\n                    {\n                        'type': 'th',\n                        'slot': entry.label,\n                    },\n                    {\n                        'type': 'td',\n                        'attributes': {\n                            'data-varType': entry.var,\n                        },\n                        'slot': entry.var === 'version' ? Uib._meta.version : JSON.stringify(this[entry.var]),\n                    }\n                ],\n            })\n        })\n\n        this._uiReplace(root)\n    }\n\n    /** Get standard data from a DOM node.\n     * @param {*} node DOM node to examine\n     * @returns {object} Standardised data object\n     */\n    nodeGet(node) {\n        const thisOut = {\n            id: node.id === '' ? undefined : node.id,\n            name: node.name,\n            children: node.childNodes.length,\n            type: node.nodeName,\n            attributes: undefined,\n\n            isUserInput: node.validity ? true : false, // eslint-disable-line no-unneeded-ternary\n            userInput: !node.validity ? undefined : { // eslint-disable-line multiline-ternary\n                value: node.value,\n                validity: undefined,\n                willValidate: node.willValidate,\n                valueAsDate: node.valueAsDate,\n                valueAsNumber: node.valueAsNumber,\n                type: node.type,\n            },\n        }\n        if ( node.nodeName !== '#text' && node.attributes && node.attributes.length > 0 ) {\n            thisOut.attributes = {}\n            // @ts-ignore\n            for (const attrib of node.attributes) {\n                if (attrib.name !== 'id') {\n                    thisOut.attributes[attrib.name] = node.attributes[attrib.name].value\n                }\n            }\n        }\n        if ( node.nodeName === '#text') {\n            thisOut.text = node.textContent\n        }\n        if ( node.validity ) thisOut.userInput.validity = {}\n        for (const v in node.validity) {\n            thisOut.userInput.validity[v] = node.validity[v]\n        }\n\n        return thisOut\n    } // --- end of nodeGet --- //\n\n    /** Get data from the DOM. Returns selection of useful props unless a specific prop requested.\n     * @param {string} cssSelector Identify the DOM element to get data from\n     * @param {string} [propName] Optional. Specific name of property to get from the element\n     * @returns {Array<*>} Array of objects containing either specific requested property or a selection of useful properties\n     */\n    uiGet(cssSelector, propName = null) {\n        // The type cast below not really correct but it gets rid of the other typescript errors\n        const selection = /** @type {NodeListOf<HTMLInputElement>} */ (document.querySelectorAll(cssSelector))\n\n        const out = []\n\n        selection.forEach( node => {\n            // Specific property asked for ...\n            if (propName !== null && propName !== '') {\n                const prop = propName.split('.').reduce((prev, cur) => prev[cur], node)\n                // Nightmare of different object types in a DOM Element!\n                if (prop.constructor.name === 'NamedNodeMap') { // Attributes\n                    const p = {}\n                    for (const key of prop) {\n                        p[key.name] = prop[key.name].value\n                    }\n                    out.push(p)\n                } else if (!prop.constructor.name.toLowerCase().includes('map')) { // Ordinary properties\n                    out.push({\n                        [propName]: prop\n                    })\n                } else { // Other MAP types\n                    const p = {}\n                    for (const key in prop) {\n                        p[key] = prop[key]\n                    }\n                    out.push(p)\n                }\n            } else { // Otherwise, grab everything useful\n                out.push(this.nodeGet(node))\n            }\n        })\n\n        return out\n    } // --- end of uiGet --- //\n\n    /** Use the Mutation Observer browser API to watch for changes to a single element on the page.\n     * OMG! It is sooo hard to turn the data into something that successfully serialises so it can be sent back to Node-RED!\n     * NB: Each cssSelector creates a unique watcher. Sending the same selector overwrites the previous one.\n     * @param {string} cssSelector A CSS Selector that selects the element to watch for changes\n     * @param {boolean|\"toggle\"} [startStop] true=start watching the DOM, false=stop. Default='toggle'\n     * @param {boolean} [send] true=Send changes to Node-RED, false=Don't send. Default=true\n     * @param {boolean} [showLog] true=Output changes to log, false=stop. Default=true. Log level is 2 (Info)\n     */\n    uiWatch(cssSelector, startStop = 'toggle', send = true, showLog = true) {\n        // Select the node that will be observed for mutations\n        const targetNode = document.querySelector(cssSelector)\n        if (!targetNode) {\n            console.log('[Uib:uiWatch] CSS Selector not found. ', cssSelector)\n            return\n        }\n\n        if (startStop === 'toggle' || startStop === undefined || startStop === null) {\n            if (this.#uiObservers[cssSelector]) startStop = false\n            else startStop = true\n        }\n\n        // Need a ref to the Uib this\n        const that = this\n\n        if (startStop === true || startStop === undefined) {\n            // Create an observer instance\n            this.#uiObservers[cssSelector] = new MutationObserver( function( mutationList /* , observer */ ) {\n                const out = []\n\n                mutationList.forEach( mu => {\n                    console.log({ mu })\n                    const oMu = {\n                        type: mu.type,\n                        oldValue: mu.oldValue !== null ? mu.oldValue : undefined,\n                    }\n\n                    if (mu.addedNodes.length > 0) {\n                        oMu.addedNodes = []\n                        mu.addedNodes.forEach( (an, i) => {\n                            oMu.addedNodes.push(that.nodeGet(mu.addedNodes[i]))\n                        })\n                    }\n\n                    if (mu.removedNodes.length > 0) {\n                        oMu.removedNodes = []\n                        mu.removedNodes.forEach( (an, i) => {\n                            oMu.removedNodes.push(that.nodeGet(mu.removedNodes[i]))\n                        })\n                    }\n\n                    if ( mu.type === 'attributes' ) {\n                        oMu.attributeName = mu.attributeName\n                        // @ts-ignore\n                        oMu.newValue = mu.target.attributes[mu.attributeName].value\n                    }\n\n                    out.push(oMu)\n                })\n\n                // Custom event\n                that._dispatchCustomEvent('uibuilder:domChange', out)\n                // Send a msg back to node-red\n                if (send === true) {\n                    that.send({\n                        _ui: {\n                            cssSelector: cssSelector,\n                            uiChanges: out\n                        },\n                        topic: that.topic || `DOM Changes for '${cssSelector}'`,\n                    })\n                }\n                // Log to info\n                if (showLog === true) {\n                    log('info', 'uibuilder.module.js:uiWatch', `DOM Changes for '${cssSelector}'`, { uiChanges: out }, { mutationList })()\n                }\n            } )\n\n            // Start observing the target node for configured mutations\n            this.#uiObservers[cssSelector].observe(targetNode, { attributes: true, childList: true, subtree: true, characterData: true })\n            log('trace', 'uibuilder.module.js:uiWatch', `Started Watching DOM changes for '${cssSelector}'`)()\n        } else {\n            this.#uiObservers[cssSelector].disconnect()\n            delete this.#uiObservers[cssSelector]\n            log('trace', 'uibuilder.module.js:uiWatch', `Stopped Watching DOM changes for '${cssSelector}'`)()\n        }\n    } // ---- End of watchDom ---- //\n\n    /** Include HTML fragment, img, video, text, json, form data, pdf or anything else from an external file or API\n     * Wraps the included object in a div tag.\n     * PDF's, text or unknown MIME types are also wrapped in an iFrame.\n     * @param {string} url The URL of the source file to include\n     * @param {object} uiOptions Object containing properties recognised by the _uiReplace function. Must at least contain an id\n     * param {string} uiOptions.id The HTML ID given to the wrapping DIV tag\n     * param {string} uiOptions.parentSelector The CSS selector for a parent element to insert the new HTML under (defaults to 'body')\n     */\n    async include(url, uiOptions) {\n        // TODO: src, id, parent must all be a strings\n        if (!url) {\n            log(0, 'Uib:include', 'url parameter must be provided, skipping.')()\n            return\n        }\n        if (!uiOptions || !uiOptions.id) {\n            log(0, 'Uib:include', 'uiOptions parameter MUST be provided and must contain at least an `id` property, skipping.')()\n            return\n        }\n\n        // Try to get the content via the URL\n        let response\n        try {\n            response = await fetch(url)\n        } catch (error) {\n            log(0, 'Uib:include', `Fetch of file '${url}' failed. `, error.message)()\n            return\n        }\n        if (!response.ok) {\n            log(0, 'Uib:include', `Fetch of file '${url}' failed. Status='${response.statusText}'`)()\n            return\n        }\n\n        // Work out what type of data we got\n        const contentType = await response.headers.get('content-type')\n        let type = null\n        if (contentType) {\n            if (contentType.includes('text/html')) {\n                type = 'html'\n            } else if (contentType.includes('application/json')) {\n                type = 'json'\n            } else if (contentType.includes('multipart/form-data')) {\n                type = 'form'\n            } else if (contentType.includes('image/')) {\n                type = 'image'\n            } else if (contentType.includes('video/')) {\n                type = 'video'\n            } else if (contentType.includes('application/pdf')) {\n                type = 'pdf'\n            } else if (contentType.includes('text/plain')) {\n                type = 'text'\n            } // else type = null\n        }\n\n        // Create the HTML to include on the page based on type\n        let slot = ''\n        switch (type) {\n            case 'html': {\n                slot = await response.text()\n                break\n            }\n\n            case 'json': {\n                const json = await response.json()\n                slot = '<pre class=\"syntax-highlight\">'\n                slot += this.syntaxHighlight(json)\n                slot += '</pre>'\n                break\n            }\n\n            case 'form': {\n                const json = await response.formData()\n                slot = '<pre class=\"syntax-highlight\">'\n                slot += this.syntaxHighlight(json)\n                slot += '</pre>'\n                break\n            }\n\n            case 'image': {\n                const myBlob = await response.blob()\n                slot = `<img src=\"${URL.createObjectURL(myBlob)}\">`\n                break\n            }\n\n            case 'video': {\n                const myBlob = await response.blob()\n                slot = `<video controls autoplay><source src=\"${URL.createObjectURL(myBlob)}\"></video>`\n                break\n            }\n\n            case 'pdf':\n            case 'text':\n            default: {\n                const myBlob = await response.blob()\n                slot = `<iframe style=\"resize:both;width:inherit;height:inherit;\" src=\"${URL.createObjectURL(myBlob)}\">`\n                break\n            }\n        }\n\n        // Wrap it all in a <div id=\"...\" class=\"included\">\n        uiOptions.type = 'div'\n        uiOptions.slot = slot\n        if (!uiOptions.parent) uiOptions.parent = 'body'\n        if (!uiOptions.attributes) uiOptions.attributes = { class: 'included' }\n\n        // Use uibuilder's standard ui processing to turn the instructions into HTML\n        this._uiReplace({\n            components: [\n                uiOptions\n            ]\n        })\n\n    } // ---- End of include() ---- //\n\n    //#endregion -------- -------- -------- //\n\n    //#region ------- HTML cache and DOM watch --------- //\n\n    /** Clear the saved DOM from localStorage */\n    clearHtmlCache() {\n        this.removeStore('htmlCache')\n        log('trace', 'uibuilder.module.js:clearHtmlCache', 'HTML cache cleared')()\n    }\n\n    /** Restore the complete DOM (the whole web page) from browser localStorage if available */\n    restoreHtmlFromCache() {\n        // Is the html cached? If so, restore it\n        const htmlCache = this.getStore('htmlCache')\n        if (htmlCache) {\n            const targetNode = document.getElementsByTagName('html')[0]\n            // Restore the entire HTML\n            targetNode.innerHTML = htmlCache\n            log('trace', 'uibuilder.module.js:restoreHtmlFromCache', 'Restored HTML from cache')()\n        } else {\n            log('trace', 'uibuilder.module.js:restoreHtmlFromCache', 'No cache to restore')()\n        }\n    }\n\n    /** Save the current DOM state to browser localStorage.\n     * localStorage is persistent and so can be recovered even after a browser restart.\n     */\n    saveHtmlCache() {\n        // Save the updated entire HTML in localStorage\n        this.setStore('htmlCache', document.documentElement.innerHTML)\n    }\n\n    /** Use the Mutation Observer browser API to watch for and save changes to the HTML\n     * Once the observer is created, it will be reused.\n     * Sending true or undefined will turn on the observer, false turns it off.\n     * saveHtmlCache is called whenever anything changes in the dom. This allows\n     * users to call restoreHtmlFromCache() on page load if desired to completely reload\n     * to the last saved state.\n     * @param {boolean} startStop true=start watching the DOM, false=stop\n     */\n    watchDom(startStop) {\n        // Select the node that will be observed for mutations\n        const targetNode = document.documentElement\n\n        // Need a ref to the Uib this\n        const that = this\n\n        // Create an observer instance\n        if (!this._htmlObserver) {\n            this._htmlObserver = new MutationObserver( function(/* mutationList, observer */) {\n                // We don't need to know the details - so kill off any outstanding mutation records\n                this.takeRecords()\n                // Save the updated entire HTML in localStorage\n                that.saveHtmlCache()\n            } )\n        }\n\n        if (startStop === true || startStop === undefined) {\n            // Start observing the target node for configured mutations\n            this._htmlObserver.observe(targetNode, { attributes: true, childList: true, subtree: true, characterData: true })\n            log('trace', 'uibuilder.module.js:watchDom', 'Started Watching and saving DOM changes')()\n        } else {\n            this._htmlObserver.disconnect()\n            log('trace', 'uibuilder.module.js:watchDom', 'Stopped Watching and saving DOM changes')()\n        }\n    } // ---- End of watchDom ---- //\n\n    //#endregion -------- -------- -------- //\n\n    //#region ------- Message Handling (To/From Node-RED) -------- //\n\n    /** Internal send fn. Send a standard or control msg back to Node-RED via Socket.IO\n     * NR will generally expect the msg to contain a payload topic\n     * @param {object} msgToSend The msg object to send.\n     * @param {string} [channel=uiBuilderClient] The Socket.IO channel to use, must be in self.ioChannels or it will be ignored\n     * @param {string} [originator] A Node-RED node ID to return the message to\n     */\n    _send(msgToSend, channel, originator = '') {\n        if (channel === null || channel === undefined) channel = this._ioChannels.client\n\n        // Make sure msgToSend is an object\n        if (channel === this._ioChannels.client) {\n            msgToSend = makeMeAnObject(msgToSend, 'payload')\n        } else if (channel === this._ioChannels.control) {\n            msgToSend = makeMeAnObject(msgToSend, 'uibuilderCtrl')\n            if (!Object.prototype.hasOwnProperty.call(msgToSend, 'uibuilderCtrl')) {\n                msgToSend.uibuilderCtrl = 'manual send'\n            }\n            // help remember where this came from as ctrl msgs can come from server or client\n            msgToSend.from = 'client'\n        }\n\n        /** since 2020-01-02 Added _socketId which should be the same as the _socketId on the server */\n        msgToSend._socketId = this._socket.id\n\n        //#region ---- Update socket.io metadata ---- //\n        // Session tab id\n        this.socketOptions.auth.tabId = this.tabId\n        // How was the page last loaded?\n        this.socketOptions.auth.lastNavType = this.lastNavType\n        // How many times has the client (re)connected since page load\n        this.socketOptions.auth.connectedNum = this.connectedNum\n        //#endregion ---- ---- ---- //\n\n        // Track how many messages have been sent & last msg sent\n        let numMsgs\n        if (channel === this._ioChannels.client) {\n            this.set('sentMsg', msgToSend)\n            numMsgs = this.set('msgsSent', ++this.msgsSent)\n        } else if (channel === this._ioChannels.control) {\n            this.set('sentCtrlMsg', msgToSend)\n            numMsgs = this.set('msgsSentCtrl', ++this.msgsSentCtrl)\n        }\n\n        // Add the originator metadata if required\n        if (originator === '' && this.originator !== '') originator = this.originator\n        if (originator !== '') Object.assign(msgToSend, { '_uib': { 'originator': originator } })\n\n        // If the msg does not have a topic - see if we want to add one\n        if ( !Object.prototype.hasOwnProperty.call(msgToSend, 'topic') ) {\n            // From the default (`uibuilder.set('topic', 'some topic')`)\n            if (this.topic !== undefined && this.topic !== '') msgToSend.topic = this.topic\n            else {\n                // Did the last inbound msg have a topic?\n                if ( Object.prototype.hasOwnProperty.call(this, 'msg') && Object.prototype.hasOwnProperty.call(this.msg, 'topic') ) {\n                    msgToSend.topic = this.msg.topic\n                }\n            }\n        }\n\n        log('debug', 'Uib:_send', ` Channel '${channel}'. Sending msg #${numMsgs}`, msgToSend)()\n\n        this._socket.emit(channel, msgToSend)\n    } // --- End of Send Msg Fn --- //\n\n    /** Send a standard message to NR\n     * @example uibuilder.send({payload:'Hello'})\n     * @param {object} msg Message to send\n     * @param {string} [originator] A Node-RED node ID to return the message to\n     */\n    send(msg, originator = '') {\n        this._send(msg, this._ioChannels.client, originator)\n    }\n\n    /** Send a control msg to NR\n     * @param {object} msg Message to send\n     */\n    sendCtrl(msg) {\n        this._send(msg, this._ioChannels.control)\n    }\n\n    /** Easily send a msg back to Node-RED on a DOM event\n     * @example In plain HTML/JavaScript\n     *    `<button id=\"button1\" name=\"button 1\" data-fred=\"jim\"></button>`\n     *    $('#button1').onclick = (evt) => {\n     *      uibuilder.eventSend(evt)\n     *    }\n     * @example\n     * In VueJS: `<b-button id=\"myButton1\" @click=\"doEvent\" data-something=\"hello\"></b-button>`\n     * In VueJS methods: `doEvent: uibuilder.eventSend,`\n     *\n     * All `data-` attributes will be passed back to Node-RED,\n     *    use them instead of arguments in the click function.\n     *    All target._ui custom properties are also passed back to Node-RED.\n     *\n     * @param {MouseEvent|any} domevent DOM Event object\n     * @param {string} [originator] A Node-RED node ID to return the message to\n     */\n    eventSend(domevent, originator = '') { // eslint-disable-line sonarjs/cognitive-complexity\n        // @ts-ignore Handle case where vue messes up `this`\n        if ( this.$attrs ) {\n            log('error', 'Uib:eventSend', '`this` has been usurped by VueJS. Make sure that you wrap the call in a function: `doEvent: function (event) { uibuilder.eventSend(event) },`' )()\n            return\n        }\n        if (!domevent && !event) {\n            log('warn', 'Uib:eventSend', 'Neither the domevent nor the hidden event properties are set. You probably called this function directly rather than applying to an on click event.' )()\n            return\n        }\n        // Handle no argument, e.g. <button onClick=\"uibuilder.eventSend()\"> - event is a hidden variable when fn used in addEventListener\n        if (!domevent || !domevent.constructor) domevent = event\n\n        // The argument must be a DOM event\n        if ((!domevent.constructor.name.endsWith('Event')) || (!domevent.currentTarget)) {\n            log('warn', 'Uib:eventSend', `ARGUMENT NOT A DOM EVENT - use data attributes not function arguments to pass data. Arg Type: ${domevent.constructor.name}`, domevent)()\n            return\n        }\n\n        // Prevent default event action\n        domevent.preventDefault()\n\n        // The target element\n        const target = domevent.currentTarget\n        // const targetId = target.id !== '' ? target.id : (target.name !== '' ? target.name : target.type)\n\n        // Get target properties - only shows custom props not element default ones\n        const props = {}\n        Object.keys(target).forEach( key => {\n            if (key.startsWith('_')) return // Exclude private\n            props[key] = target[key]\n        })\n\n        const ignoreAttribs = ['class', 'id', 'name']\n        const attribs = Object.assign({},\n            ...Array.from(target.attributes,\n                ( { name, value } ) => {\n                    if ( !ignoreAttribs.includes(name) ) {\n                        return ({ [name]: value })\n                    }\n                    return undefined\n                }\n            )\n        )\n\n        // If target embedded in a form, include the form data\n        const form = {}\n        const frmVals = []\n        if ( target.form ) {\n            form.valid = target.form.checkValidity()\n            Object.values(target.form).forEach( (frmEl, i) => {\n                const id = frmEl.id !== '' ? frmEl.id : (frmEl.name !== '' ? frmEl.name : `${i}-${frmEl.type}`)\n                // const attribs = Object.assign({},\n                //     ...Array.from(frmEl.attributes,\n                //         ( { name, value } ) => {\n                //             if ( !ignoreAttribs.includes(name) ) {\n                //                 return ({ [name]: value })\n                //             }\n                //             return undefined\n                //         }\n                //     )\n                // )\n                if (id !== '') {\n                    frmVals.push( { key: id, val: frmEl.value } ) // simplified for addition to msg.payload\n                    // form[id] = frmEl.value\n                    form[id] = {\n                        'id': frmEl.id,\n                        'name': frmEl.name,\n                        'value': frmEl.value,\n                        'valid': frmEl.checkValidity(),\n                    }\n                    if (form[id].valid === false) {\n                        const v = frmEl.validity\n                        form[id].validity = {\n                            badInput: v.badInput === true ? v.badInput : undefined,\n                            customError: v.customError === true ? v.customError : undefined,\n                            patternMismatch: v.patternMismatch === true ? v.patternMismatch : undefined,\n                            rangeOverflow: v.rangeOverflow === true ? v.rangeOverflow : undefined,\n                            rangeUnderflow: v.rangeUnderflow === true ? v.rangeUnderflow : undefined,\n                            stepMismatch: v.stepMismatch === true ? v.stepMismatch : undefined,\n                            tooLong: v.tooLong === true ? v.tooLong : undefined,\n                            tooShort: v.tooShort === true ? v.tooShort : undefined,\n                            typeMismatch: v.typeMismatch === true ? v.typeMismatch : undefined,\n                            valueMissing: v.valueMissing === true ? v.valueMissing : undefined,\n                        }\n                    }\n                    if (frmEl.dataset) form[id].data = frmEl.dataset\n                }\n            })\n        }\n\n        // Set up the msg to send - NB: Topic may be added by this._send\n        const msg = {\n            // Each `data-xxxx` attribute is added as a property\n            // - this may be an empty Object if no data attributes defined\n            payload: { ...target.dataset },\n\n            _ui: {\n                type: 'eventSend',\n                id: target.id !== '' ? target.id : undefined,\n                name: target.name !== '' ? target.name : undefined,\n                slotText: target.textContent !== '' ? target.textContent.substring(0, 255) : undefined,\n\n                form: form,\n                props: props,\n                attribs: attribs,\n                classes: Array.from(target.classList),\n\n                event: domevent.type,\n                altKey: domevent.altKey,\n                ctrlKey: domevent.ctrlKey,\n                shiftKey: domevent.shiftKey,\n                metaKey: domevent.metaKey,\n\n                pointerType: domevent.pointerType,\n                nodeName: target.nodeName,\n\n                clientId: this.clientId,\n                pageName: this.pageName,\n                tabId: this.tabId,\n            }\n        }\n\n        if (frmVals.length > 0) {\n            frmVals.forEach( entry => {\n                msg.payload[entry.key] = entry.val\n            })\n        }\n\n        if (domevent.type === 'change') msg._ui.newValue = msg.payload.value = domevent.target.value\n\n        log('trace', 'Uib:eventSend', 'Sending msg to Node-RED', msg)()\n        if (target.dataset.length === 0) log('warn', 'Uib:eventSend', 'No payload in msg. data-* attributes should be used.')()\n\n        this._send(msg, this._ioChannels.client, originator)\n    }\n\n    /** Easily send the entire DOM/HTML msg back to Node-RED\n     * @param {string} [originator] A Node-RED node ID to return the message to\n     */\n    htmlSend(originator = '') {\n        // @ts-ignore Han\n\n        // Set up the msg to send - NB: Topic may be added by this._send\n        const msg = {\n            payload: document.documentElement.innerHTML,\n            topic: this.topic,\n        }\n\n        log('trace', 'Uib:htmlSend', 'Sending full HTML to Node-RED', msg)()\n\n        this._send(msg, this._ioChannels.client, originator)\n    }\n\n    /** Process msg._uib.command - Remember to update #extCommands with new allowed commands\n     * @param {object} msg Msg from Node-RED containing a msg._uib object\n     */\n    _uibCommand(msg) {\n        const cmd = msg._uib.command\n        // Disallowed command request outputs error and ignores the msg (NB: Case must match)\n        if (!this.#extCommands.includes(cmd.trim())) {\n            log('error', 'Uib:_uibCommand', `Command '${cmd} is not allowed to be called externally`)()\n            return\n        }\n        const prop = msg._uib.prop\n        const value = msg._uib.value\n        let response\n\n        switch (cmd) {\n            case 'get': {\n                response = this.get(prop)\n                break\n            }\n\n            case 'htmlSend': {\n                response = this.htmlSend()\n                break\n            }\n\n            case 'set': {\n                response = this.set(prop, value)\n                break\n            }\n\n            case 'showMsg': {\n                response = this.showMsg(value, prop)\n                break\n            }\n\n            case 'showStatus': {\n                response = this.showStatus(value, prop)\n                break\n            }\n\n            case 'uiGet': {\n                response = this.uiGet(prop)\n                break\n            }\n\n            case 'uiWatch': {\n                response = this.uiWatch(prop)\n                break\n            }\n\n            case 'include': {\n                response = this.include(prop, value)\n                break\n            }\n\n            default: {\n                log('warning', 'Uib:_uibCommand', `Command '${cmd}' not yet implemented`)()\n                break\n            }\n        }\n\n        if (response !== undefined && Object(response).constructor !== Promise) {\n            msg.payload = msg._uib.response = response\n            if (!msg.topic) msg.topic = this.topic || `uib ${cmd} for '${prop}'`\n            this.send(msg)\n        }\n\n    } // --- end of _uibCommand ---\n\n    // Handle received messages - Process some msgs internally, emit specific events on document that make it easy for coders to use\n    _msgRcvdEvents(msg) {\n\n        // Message received\n        this._dispatchCustomEvent('uibuilder:stdMsgReceived', msg)\n\n        // Topic\n        if ( msg.topic ) this._dispatchCustomEvent(`uibuilder:msg:topic:${msg.topic}`, msg)\n\n        // Handle msg._uib special requests\n        if (msg._uib) {\n            /** Process a client reload request from Node-RED - as the page is reloaded, everything else is ignored\n             * Note that msg._ui.reload is also actioned via the _ui processing below */\n            if (msg._uib.reload === true) {\n                log('trace', 'Uib:_msgRcvdEvents:_uib:reload', 'reloading')()\n                location.reload()\n                return\n            }\n\n            // Process msg._uib.command messages - allows Node-RED to run uibuilder FE functions\n            if (msg._uib.command) {\n                this._uibCommand(msg)\n                return\n            }\n\n            // Better to request via msg._ui - these are for backwards compatibility\n            if ( msg._uib.componentRef === 'globalNotification' ) {\n                this.showDialog('notify', msg._uib.options, msg)\n            }\n            if ( msg._uib.componentRef === 'globalAlert' ) {\n                this.showDialog('alert', msg._uib.options, msg)\n            }\n        }\n\n        // Handle msg._ui requests\n        if ( msg._ui ) {\n            log('trace', 'Uib:_msgRcvdEvents:_ui', 'Calling _uiManager')()\n            this._dispatchCustomEvent('uibuilder:msg:_ui', msg)\n            this._uiManager(msg)\n        }\n\n    } // --- end of _msgRcvdEvents ---\n\n    /** Callback handler for messages from Node-RED\n     * NOTE: `this` is the class here rather the `socket` as would be normal since we bind the correct `this` in the call.\n     *       Use this._socket if needing reference to the socket.\n     * @callback ioSetupFromServer Called from ioSetup/this._socket.on(this.#ioChannels.server, this.stdMsgFromServer.bind(this))\n     * @param {object} receivedMsg The msg object from Node-RED\n     * @this Uib\n     */\n    _stdMsgFromServer(receivedMsg) {\n\n        // Make sure that msg is an object & not null\n        receivedMsg = makeMeAnObject(receivedMsg, 'payload')\n\n        // @since 2018-10-07 v1.0.9: Work out local time offset from server\n        this._checkTimestamp(receivedMsg)\n\n        // Save the msg for further processing\n        this.set('msg', receivedMsg)\n\n        // Track how many messages have been received\n        this.set('msgsReceived', ++this.msgsReceived)\n\n        // Emit specific document events on msg receipt that make it easy for coders to use\n        this._msgRcvdEvents(receivedMsg)\n\n        log('info', 'Uib:ioSetup:stdMsgFromServer', `Channel '${this._ioChannels.server}'. Received msg #${this.msgsReceived}.`, receivedMsg)()\n\n        // ! NOTE: Don't try to handle specialist messages here. See _msgRcvdEvents.\n\n    } // -- End of websocket receive DATA msg from Node-RED -- //\n\n    /** Handles original control msgs (not to be confused with \"new\" msg._uib controls)\n     * @param {*} receivedCtrlMsg The msg received on the socket.io control channel\n     */\n    _ctrlMsgFromServer(receivedCtrlMsg) {\n\n        // Make sure that msg is an object & not null\n        if (receivedCtrlMsg === null) {\n            receivedCtrlMsg = {}\n        } else if (typeof receivedCtrlMsg !== 'object') {\n            const msg = {}\n            msg['uibuilderCtrl:' + this._ioChannels.control] = receivedCtrlMsg\n            receivedCtrlMsg = msg\n        }\n\n        // @since 2018-10-07 v1.0.9: Work out local time offset from server\n        this._checkTimestamp(receivedCtrlMsg)\n\n        this.set('ctrlMsg', receivedCtrlMsg)\n        this.set('msgsCtrlReceived', ++this.msgsCtrlReceived)\n\n        log('trace', 'Uib:ioSetup:_ctrlMsgFromServer', `Channel '${this._ioChannels.control}'. Received control msg #${this.msgsCtrlReceived}`, receivedCtrlMsg)()\n\n        /** Process control msg types */\n        switch (receivedCtrlMsg.uibuilderCtrl) {\n            // Node-RED is shutting down\n            case 'shutdown': {\n                log('info', `Uib:ioSetup:${this._ioChannels.control}`, '\u274C Received \"shutdown\" from server')()\n                this.set('serverShutdown', undefined)\n                break\n            }\n\n            /** We are connected to the server - 1st msg from server */\n            case 'client connect': {\n                log('trace', `Uib:ioSetup:${this._ioChannels.control}`, 'Received \"client connect\" from server')()\n                log('info', `Uib:ioSetup:${this._ioChannels.control}`, `\u2705 Server connected. Version: ${receivedCtrlMsg.version}\\nServer time: ${receivedCtrlMsg.serverTimestamp}, Sever time offset: ${this.serverTimeOffset} hours`)()\n\n                if ( !Uib._meta.version.startsWith(receivedCtrlMsg.version.split('-')[0]) ) {\n                    log('warn', `Uib:ioSetup:${this._ioChannels.control}`, `Server version (${receivedCtrlMsg.version}) not the same as the client version (${Uib._meta.version})`)()\n                }\n\n                if (this.autoSendReady === true) { // eslint-disable-line no-lonely-if\n                    log('trace', `Uib:ioSetup:${this._ioChannels.control}/client connect`, 'Auto-sending ready-for-content/replay msg to server')\n                    // @since 0.4.8c Add cacheControl property for use with node-red-contrib-infocache\n                    // @since 6.1.0 Don't bother, we use the \"client connect\" msg\n                    // this._send({\n                    //     'uibuilderCtrl': 'ready for content',\n                    //     'cacheControl': 'REPLAY',\n                    // }, this._ioChannels.control)\n                }\n\n                break\n            }\n\n            default: {\n                log('trace', `uibuilderfe:ioSetup:${this._ioChannels.control}`, `Received ${receivedCtrlMsg.uibuilderCtrl} from server`)\n                // Anything else to do for other control msgs?\n            }\n\n        } // ---- End of process control msg types ---- //\n\n    } // -- End of websocket receive CONTROL msg from Node-RED -- //\n\n    /** Send log text to uibuilder's beacon endpoint (works even if socket.io not connected)\n     * @param {string} txtToSend Text string to send\n     * @param {string|undefined} logLevel Log level to use. If not supplied, will default to debug\n     */\n    beaconLog(txtToSend, logLevel) {\n        if (!logLevel) logLevel = 'debug'\n        navigator.sendBeacon('./_clientLog', `${logLevel}::${txtToSend}`)\n    }\n\n    /** Send log info back to Node-RED over uibuilder's websocket control output (Port #2)\n     * -@param {...*} arguments All arguments passed to the function are added to the msg.payload\n     */\n    logToServer() {\n        this.sendCtrl({\n            uibuilderCtrl: 'client log message',\n            payload: arguments,\n            // \"version\":\"6.1.0-iife.min\",\n            _socketId: this._socket.id,\n            // \"ip\":\"::1\",\n            clientId: this.clientId,\n            tabId: this.tabId,\n            // \"url\":\"esp-test\",\n            pageName: this.pageName,\n            connections: this.connectedNum,\n            lastNavType: this.lastNavType,\n        })\n    }\n\n    //#endregion -------- ------------ -------- //\n\n    //#region ------- Socket.IO -------- //\n\n    /** Return the Socket.IO namespace\n     * The cookie method is the most reliable but this falls back to trying to work it\n     * out from the URL if cookies not available. That won't work if page is in a sub-folder.\n     * since 2017-10-21 Improve method to cope with more complex paths - thanks to Steve Rickus @shrickus\n     * since 2017-11-10 v1.0.1 Check cookie first then url. cookie works even if the path is more complex (e.g. sub-folder)\n     * since 2020-01-25 Removed httpRoot from namespace to prevent proxy induced errors\n     * @returns {string} Socket.IO namespace\n     */\n    _getIOnamespace() {\n\n        let ioNamespace\n\n        /** Try getting the namespace cookie. */\n        ioNamespace = this.cookies['uibuilder-namespace']\n\n        // if it wasn't available, try using the current url path\n        if (ioNamespace === undefined || ioNamespace === '') {\n            // split url path & eliminate any blank elements, and trailing or double slashes\n            const u = window.location.pathname.split('/')\n                .filter(function (t) { return t.trim() !== '' })\n\n            /** since v2.0.5 Extra check for 0 length, Issue #73. since 2017-11-06 If the last element of the path is an .html file name, remove it */\n            if (u.length > 0 && (u[u.length - 1].endsWith('.html'))) u.pop()\n\n            // Get the last part of the url path, this MUST match the namespace in uibuilder\n            ioNamespace = u.pop()\n\n            log('trace', 'uibuilder.module.js:getIOnamespace', `Socket.IO namespace found via url path: ${ioNamespace}`)()\n        } else {\n            log('trace', 'uibuilder.module.js:getIOnamespace', `Socket.IO namespace found via cookie: ${ioNamespace}`)()\n        }\n\n        // Namespace HAS to start with a /\n        ioNamespace = '/' + ioNamespace\n\n        log('trace', 'uibuilder.module.js:getIOnamespace', `Final Socket.IO namespace: ${ioNamespace}`)()\n\n        return ioNamespace\n    } // --- End of set IO namespace --- //\n\n    /** Function used to check whether Socket.IO is connected to the server, reconnect if not (recursive)\n     * @param {number} [delay] Initial delay before checking (ms). Default=2000ms\n     * @param {number} [factor] Multiplication factor for subsequent checks (delay*factor). Default=1.5\n     * @param {number} [depth] Recursion depth\n     * @returns {boolean|undefined} Whether or not Socket.IO is connected to uibuilder in Node-RED\n     */\n    _checkConnect(delay, factor, depth = 1) {\n        if ( navigator.onLine === false ) return // Don't bother if we know we are offline\n\n        if (!delay) delay = this.retryMs\n        if (!factor) factor = this.retryFactor\n\n        log('trace', 'Uib:checkConnect', `Checking connection. Connected: ${this._socket.connected}. Timer: ${this.#timerid}. Depth: ${depth}. Delay: ${delay}. Factor: ${factor}`, this._socket)()\n\n        // If we are connected ...\n        if (this._socket.connected === true) {\n            // Clear the setTimeout\n            if (this.#timerid) {\n                window.clearTimeout(this.#timerid)\n                this.#timerid = null\n            }\n            this.set('ioConnected', true)\n            this.set('socketError', null)\n            return true\n        }\n\n        // ... we aren't connected so:\n        this.set('ioConnected', false)\n\n        // we only want one running at a time\n        if (this.#timerid) window.clearTimeout(this.#timerid)\n\n        // Create the new timer\n        this.#timerid = window.setTimeout(() => {\n            log('warn', 'Uib:checkConnect:setTimeout', `Socket.IO reconnection attempt. Current delay: ${delay}. Depth: ${depth}`)()\n\n            // this is necessary sometimes when the socket fails to connect on startup\n            this._socket.close()\n\n            // Try to reconnect\n            this._socket.connect()\n\n            // don't need to check whether we have connected as the timer will have been cleared if we have\n            this.#timerid = null\n\n            // @ts-ignore Create new timer for next time round with extended delay\n            this._checkConnect(delay * factor, factor, depth++)\n        }, delay)\n\n        return false\n    } // --- End of checkConnect Fn--- //\n\n    // See message handling section for msg receipt handlers\n\n    /** Setup Socket.io\n     * since v2.0.0-beta2 Moved to a function and called by the user (uibuilder.start()) so that namespace & path can be passed manually if needed\n     * @returns {boolean} Attaches socket.io manager to self._socket and updates self.ioNamespace & self.ioPath as needed\n     */\n    _ioSetup() {\n\n        // Just a notification, actual load is done outside the class (see start of file)\n        if (io === undefined) {\n            log('error', 'Uib:ioSetup', 'Socket.IO client not loaded, Node-RED comms will not work')()\n            return false\n        }\n\n        // If socket is already set up, close it and remove all of the listeners\n        if (this._socket) {\n            log('trace', 'Uib:ioSetup', 'Removing listeners in preparation for redoing Socket.IO connections')()\n            if (this.#timerid) {\n                window.clearTimeout(this.#timerid)\n                this.#timerid = null\n            }\n            this._socket.close()\n            this._socket.offAny()\n            this._socket = undefined\n            this.set('ioConnected', false)\n        }\n\n        // Update the URL path to make sure we have the right one\n        this.socketOptions.path = this.ioPath\n\n        //#region --- custom meta-data ---\n        // Add the pageName\n        this.socketOptions.auth.pageName = this.pageName\n        // Add stable client id (static unless browser closed)\n        this.socketOptions.auth.clientId = this.clientId\n        this.socketOptions.transportOptions.polling.extraHeaders['x-clientid'] = `${Uib._meta.displayName}; ${Uib._meta.type}; ${Uib._meta.version}; ${this.clientId}`\n        // Session tab id\n        this.socketOptions.auth.tabId = this.tabId\n        // How was the page last loaded?\n        this.socketOptions.auth.lastNavType = this.lastNavType\n        // How many times has the client (re)connected since page load\n        this.socketOptions.auth.connectedNum = this.connectedNum\n        //#endregion --- ---- ---\n\n        // Create the socket - make sure client uses Socket.IO version from the uibuilder module (using path)\n        log('trace', 'Uib:ioSetup', `About to create IO object. Transports: [${this.socketOptions.transports.join(', ')}]`)()\n        this._socket = io(this.ioNamespace, this.socketOptions)\n\n        /** When the socket is connected - set ioConnected flag and reset connect timer  */\n        this._socket.on('connect', () => {\n\n            this.set('connectedNum', this.connectedNum++)\n            // How many times has the client (re)connected since page load\n            this.socketOptions.auth.connectedNum = this.connectedNum\n            // How was the page last loaded?\n            this.socketOptions.auth.lastNavType = this.lastNavType\n            // Session tab id\n            this.socketOptions.auth.tabId = this.tabId\n            this.socketOptions.auth.more = this.tabId\n\n            log('info', 'Uib:ioSetup', `\u2705 SOCKET CONNECTED. Connection count: ${this.connectedNum}\\nNamespace: ${this.ioNamespace}`)()\n            this._dispatchCustomEvent('uibuilder:socket:connected', this.connectedNum)\n\n            this._checkConnect() // resets any reconnection timers & sets connected flag\n\n        }) // --- End of socket connection processing ---\n\n        // RECEIVE a STANDARD, non-control msg from Node-RED server\n        this._socket.on(this._ioChannels.server, this._stdMsgFromServer.bind(this))\n\n        // RECEIVE a CONTROL msg from Node-RED server - see also sendCtrl()\n        this._socket.on(this._ioChannels.control, this._ctrlMsgFromServer.bind(this))\n\n        // When the socket is disconnected ..............\n        this._socket.on('disconnect', (reason) => {\n            // reason === 'io server disconnect' - redeploy of Node instance\n            // reason === 'transport close' - Node-RED terminating\n            // reason === 'ping timeout' - didn't receive a pong response?\n            log('info', 'Uib:ioSetup:socket-disconnect', `\u26D4 Socket Disconnected. Reason: ${reason}`)()\n\n            this._dispatchCustomEvent('uibuilder:socket:disconnected', reason)\n\n            /** A workaround for SIO's failure to reconnect after a disconnection */\n            this._checkConnect()\n        }) // --- End of socket disconnect processing ---\n\n        // Socket.io connection error - probably the wrong ioPath - or client is offline\n        this._socket.on('connect_error', (err) => {\n            if ( navigator.onLine === false ) return // Don't bother with an error if we know we are offline\n            log('error', 'Uib:ioSetup:connect_error', `\u274C Socket.IO Connect Error. Reason: ${err.message}`, err)()\n            this.set('ioConnected', false)\n            this.set('socketError', err)\n            this._dispatchCustomEvent('uibuilder:socket:disconnected', err)\n        }) // --- End of socket connect error processing ---\n\n        // Socket.io error - from the server (socket.use middleware triggered an error response)\n        this._socket.on('error', (err) => {\n            log('error', 'Uib:ioSetup:error', `\u274C Socket.IO Error. Reason: ${err.message}`, err)()\n            this.set('ioConnected', false)\n            this.set('socketError', err)\n            this._dispatchCustomEvent('uibuilder:socket:disconnected', err)\n        }) // --- End of socket error processing ---\n\n        // Ensure we are connected, retry if not\n        this._checkConnect()\n\n        return true\n\n        /* We really don't need these, just for interest\n            self._socket.io.on('packet', function onPacket(data){\n                // we get one of these for each REAL msg (not ping/pong)\n                console.debug('PACKET', data)\n            })\n            self._socket.on('pong', function(latency) {\n                console.debug('SOCKET PONG - Latency: ', latency)\n                //console.dir(self._socket)\n            }) // --- End of socket pong processing ---\n            self._socket.io.on('packet', function(data){\n                // We get one of these for actual messages, not ping/pong\n                console.debug('PACKET', data)\n            })\n            self._socket.on('connect_timeout', function(timeout) {\n                console.debug('SOCKET CONNECT TIMEOUT - Namespace: ' + ioNamespace + ', Timeout: ' + timeout)\n            }) // --- End of socket connect timeout processing ---\n            self._socket.on('reconnect', function(attemptNum) {\n                console.debug('SOCKET RECONNECTED - Namespace: ' + ioNamespace + ', Attempt #: ' + attemptNum)\n            }) // --- End of socket reconnect processing ---\n            self._socket.on('reconnect_attempt', function(attemptNum) {\n                console.debug('SOCKET RECONNECT ATTEMPT - Namespace: ' + ioNamespace + ', Attempt #: ' + attemptNum)\n            }) // --- End of socket reconnect_attempt processing ---\n            self._socket.on('reconnecting', function(attemptNum) {\n                console.debug('SOCKET RECONNECTING - Namespace: ' + ioNamespace + ', Attempt #: ' + attemptNum)\n            }) // --- End of socket reconnecting processing ---\n            self._socket.on('reconnect_error', function(err) {\n                console.debug('SOCKET RECONNECT ERROR - Namespace: ' + ioNamespace + ', Reason: ' + err.message)\n                //console.dir(err)\n            }) // --- End of socket reconnect_error processing ---\n            self._socket.on('reconnect_failed', function() {\n                console.debug('SOCKET RECONNECT FAILED - Namespace: ' + ioNamespace)\n            }) // --- End of socket reconnect_failed processing ---\n            self._socket.on('ping', function() {\n                console.debug('SOCKET PING')\n            }) // --- End of socket ping processing ---\n            self._socket.on('pong', function(latency) {\n                console.debug('SOCKET PONG - Latency: ', latency)\n            }) // --- End of socket pong processing ---\n            */\n    } // ---- End of ioSetup ---- //\n\n    //#endregion -------- ------------ -------- //\n\n    //#region ------- Class construction & startup method -------- //\n\n    constructor() {\n        log('trace', 'Uib:constructor', 'Starting')()\n\n        // Track whether the client is online or offline\n        window.addEventListener('offline', (e) => {\n            this.set('online', false)\n            this.set('ioConnected', false)\n            log('warn', 'Browser', 'DISCONNECTED from network')()\n        })\n        window.addEventListener('online', (e) => {\n            this.set('online', true)\n            log('warn', 'Browser', 'Reconnected to network')()\n            this._checkConnect()\n        })\n\n        document.cookie.split(';').forEach((c) => {\n            const splitC = c.split('=')\n            this.cookies[splitC[0].trim()] = splitC[1]\n        })\n\n        /** Client ID set by uibuilder - lasts until browser profile is closed, applies to all tabs */\n        this.set('clientId', this.cookies['uibuilder-client-id'])\n        log('trace', 'Uib:constructor', 'Client ID: ', this.clientId)()\n\n        /** Tab ID - lasts while the tab is open (even if reloaded)\n         * WARNING: Duplicating a tab retains the same tabId\n         */\n        this.set('tabId', window.sessionStorage.getItem('tabId'))\n        if (!this.tabId) {\n            this.set('tabId', `t${Math.floor(Math.random() * 1000000)}`)\n            window.sessionStorage.setItem('tabId', this.tabId)\n        }\n\n        // document.addEventListener('pagehide', (event) => {\n        //     // console.log(`pagehide. From Cache?: ${event.persisted}`)\n        //     navigator.sendBeacon('./_clientLog', `pagehide. From Cache?: ${event.persisted}`)\n        // })\n        // document.addEventListener('pageshow', (event) => {\n        //     // console.log(`pageshow. From Cache?: ${event.persisted}`)\n        //     navigator.sendBeacon('./_clientLog', `pageshow. From Cache?: ${event.persisted}`)\n        // })\n        document.addEventListener('load', () => {\n            this.set('isVisible', true)\n        })\n        document.addEventListener('visibilitychange', () => {\n            // hidden=unload, minimise. visible=un-minimise (not fired on load)\n            this.set('isVisible', document.visibilityState === 'visible')\n            this.sendCtrl({ uibuilderCtrl: 'visibility', isVisible: this.isVisible })\n            // navigator.userActivation is experimental Chromium only\n            // console.log('visibilitychange', ':', `Document Event: visibilitychange. Visibility State: ${document.visibilityState}. User Activity- Has:${navigator.userActivation.hasBeenActive}, Is:${navigator.userActivation.isActive}`)\n            // navigator.sendBeacon('./_clientLog', `${(new Date()).toISOString()} Document Event: visibilitychange. Visibility State: ${document.visibilityState}. User Activity- Has:${navigator.userActivation.hasBeenActive}, Is:${navigator.userActivation.isActive}`)\n        })\n\n        // Set a listener to update showStatus table if it is active\n        document.addEventListener('uibuilder:propertyChanged', (event) => {\n            if (!this.#isShowStatus) return\n\n            if (event.detail.prop in this.#showStatus) {\n                document.querySelector(`td[data-vartype=\"${event.detail.prop}\"]`).innerText = JSON.stringify(event.detail.value)\n            }\n        })\n\n        this.set('ioNamespace', this._getIOnamespace())\n\n        //#region - Try to make sure client uses Socket.IO client version from the uibuilder module (using cookie or path) @since v2.0.0 2019-02-24 allows for httpNodeRoot\n\n        /** httpNodeRoot (to set path) */\n        if ('uibuilder-webRoot' in this.cookies) {\n            this.set('httpNodeRoot', this.cookies['uibuilder-webRoot'])\n            log('trace', 'Uib:constructor', `httpNodeRoot set by cookie to \"${this.httpNodeRoot}\"`)()\n        } else {\n            // split current url path, eliminate any blank elements and trailing or double slashes\n            const fullPath = window.location.pathname.split('/').filter(function (t) { return t.trim() !== '' })\n            /** handle url includes file name - @since v2.0.5 Extra check for 0 length, Issue #73. */\n            if (fullPath.length > 0 && fullPath[fullPath.length - 1].endsWith('.html')) fullPath.pop()\n            fullPath.pop() // gives the last path section of the url\n            this.set('httpNodeRoot', `/${fullPath.join('/')}`)\n            log('trace', '[Uib:constructor]', `httpNodeRoot set by URL parsing to \"${this.httpNodeRoot}\". NOTE: This may fail for pages in sub-folders.`)()\n        }\n        this.set('ioPath', urlJoin(this.httpNodeRoot, Uib._meta.displayName, 'vendor', 'socket.io'))\n        log('trace', 'Uib:constructor', `ioPath: \"${this.ioPath}\"`)()\n\n        //#endregion\n\n        // Work out pageName\n        this.set('pageName', window.location.pathname.replace(`${this.ioNamespace}/`, ''))\n        if ( this.pageName.endsWith('/') ) this.set('pageName', `${this.pageName}index.html`)\n        if ( this.pageName === '' ) this.set('pageName', 'index.html')\n\n        this._dispatchCustomEvent('uibuilder:constructorComplete')\n\n        log('trace', 'Uib:constructor', 'Ending')()\n    }\n\n    /** Start up Socket.IO comms and listeners\n     * This has to be done separately because if running from a web page in a sub-folder of src/dist, uibuilder cannot\n     * necessarily work out the correct ioPath to use.\n     * Also, if cookies aren't permitted in the browser, both ioPath and ioNamespace may need to be specified.\n     * @param {object} [options] The start options object.\n     * @returns {void}\n     */\n    start(options) {\n        log('trace', 'Uib:start', 'Starting')()\n\n        // Cancel the msg event handler if already present\n        if ( this.#MsgHandler ) this.cancelChange('msg', this.#MsgHandler)\n\n        if (this.started === true) {\n            log('info', 'Uib:start', 'Start function already called. Resetting Socket.IO and msg handler.')()\n        }\n\n        log('log', 'Uib:start', 'Cookies: ', this.cookies, `\\nClient ID: ${this.clientId}`)()\n        log('trace', 'Uib:start', 'ioNamespace: ', this.ioNamespace, `\\nioPath: ${this.ioPath}`)()\n\n        // Handle options\n        if (options) {\n            if (options.ioNamespace !== undefined && options.ioNamespace !== null && options.ioNamespace !== '') this.set('ioNamespace', options.ioNamespace)\n            if (options.ioPath !== undefined && options.ioPath !== null && options.ioPath !== '') this.set('ioPath', options.ioPath)\n            // See below for handling of options.loadStylesheet\n        }\n\n        // Do we need to load styles?\n        if ( document.styleSheets.length >= 1 || (document.styleSheets.length === 1 && document.styleSheets[0].cssRules.length === 0) ) {\n            log('info', 'Uib:start', 'Styles already loaded so not loading uibuilder default styles.')()\n        } else {\n            if (options && options.loadStylesheet === false) log('info', 'Uib:start', 'No styles loaded & options.loadStylesheet === false.')()\n            else {\n                log('info', 'Uib:start', 'No styles loaded, loading uibuilder default styles.')()\n                this.loadStyleSrc(`${this.httpNodeRoot}/uibuilder/uib-brand.css`)\n            }\n        }\n\n        /** Handle specialist messages like reload and _ui -> Moved to _msgRcvdEvents */\n\n        // Track last browser navigation type: navigate, reload, back_forward, prerender\n        const [entry] = performance.getEntriesByType('navigation')\n        // @ts-ignore\n        this.set('lastNavType', entry.type)\n\n        // Start up (or restart) Socket.IO connections and listeners. Returns false if io not found\n        this.set('started', this._ioSetup())\n\n        if ( this.started === true ) {\n            log('trace', 'Uib:start', 'Start completed. Socket.IO client library loaded.')()\n        } else {\n            log('error', 'Uib:start', 'Start completed. ERROR: Socket.IO client library NOT LOADED.')()\n        }\n\n        // Check if Vue is present (used for dynamic UI processing)\n        if (window['Vue']) {\n            this.set('isVue', true)\n            try {\n                this.set('vueVersion', window['Vue'].version)\n            } catch (e) { }\n        }\n\n        // Set up msg listener for the optional showMsg\n        this.onChange('msg', (msg) => {\n            if (this.#isShowMsg === true) {\n                const eMsg = document.getElementById('uib_last_msg')\n                if (eMsg) eMsg.innerHTML = this.syntaxHighlight(msg)\n            }\n        })\n\n        this._dispatchCustomEvent('uibuilder:startComplete')\n    }\n\n    //#endregion -------- ------------ -------- //\n\n} // ==== End of Class Uib\n\n//#region --- Wrap up - get things started ---\n\n// Create an instance (we will only ever want one)\nconst uibuilder = new Uib()\n\n// Assign reference to the instance to the global `window` object\n// Only useful if loading via <script> tag - prefer loading via `import uibuilder from ...`\nif (!window['uibuilder']) {\n    window['uibuilder'] = uibuilder\n} else {\n    log('error', 'uibuilder.module.js', 'uibuilder already assigned to window. Have you tried to load it more than once?')\n}\n\n// Assign `$` to global window object unless it is already in use.\n// Note that this is also available as `uibuilder.$`.\nif (!window['$']) {\n    /** @type {HTMLElement} */\n    window['$'] = window['uibuilder'].$ // document.querySelector.bind(document)\n} else {\n    log('warn', 'uibuilder.module.js', 'Cannot allocate the global `$`, it is already in use. Use `uibuilder.$` instead.')\n}\n\n// Can import as `import uibuilder from ...` OR `import {uibuilder} from ...`\nexport { uibuilder }\nexport default uibuilder\n\n// Attempt to run start fn\nuibuilder.start()\n\n//#endregion --- Wrap up ---\n\n// EOF\n"],
  "mappings": "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",
  "names": ["PACKET_TYPES", "PACKET_TYPES_REVERSE", "key", "ERROR_PACKET", "withNativeBlob", "withNativeArrayBuffer", "isView", "obj", "encodePacket", "type", "data", "supportsBinary", "callback", "encodeBlobAsBase64", "PACKET_TYPES", "fileReader", "content", "encodePacket_browser_default", "chars", "lookup", "decode", "base64", "bufferLength", "len", "i", "p", "encoded1", "encoded2", "encoded3", "encoded4", "arraybuffer", "bytes", "lookup", "withNativeArrayBuffer", "decodePacket", "encodedPacket", "binaryType", "mapBinary", "type", "decodeBase64Packet", "PACKET_TYPES_REVERSE", "ERROR_PACKET", "data", "decoded", "decode", "decodePacket_browser_default", "SEPARATOR", "encodePayload", "packets", "callback", "length", "encodedPackets", "count", "packet", "i", "encodePacket_browser_default", "encodedPacket", "decodePayload", "encodedPayload", "binaryType", "decodedPacket", "decodePacket_browser_default", "protocol", "Emitter", "obj", "mixin", "key", "event", "fn", "on", "callbacks", "cb", "i", "args", "len", "globalThisShim", "pick", "obj", "attr", "acc", "k", "NATIVE_SET_TIMEOUT", "globalThisShim", "NATIVE_CLEAR_TIMEOUT", "installTimerFunctions", "opts", "BASE64_OVERHEAD", "byteLength", "utf8Length", "str", "c", "length", "i", "l", "TransportError", "reason", "description", "context", "Transport", "Emitter", "opts", "installTimerFunctions", "packets", "data", "packet", "decodePacket_browser_default", "details", "onPause", "alphabet", "length", "map", "seed", "i", "prev", "encode", "num", "encoded", "yeast", "now", "encode", "prev", "seed", "i", "length", "map", "alphabet", "encode", "obj", "str", "i", "decode", "qs", "qry", "pairs", "l", "pair", "value", "hasCORS", "XHR", "opts", "xdomain", "hasCORS", "globalThisShim", "empty", "hasXHR2", "XHR", "Polling", "Transport", "opts", "isSSL", "port", "forceBase64", "onPause", "pause", "total", "data", "callback", "packet", "decodePayload", "close", "packets", "encodePayload", "query", "schema", "yeast", "encodedQuery", "encode", "ipv6", "Request", "fn", "req", "xhrStatus", "context", "Emitter", "uri", "installTimerFunctions", "pick", "xhr", "i", "e", "err", "fromError", "unloadHandler", "terminationEvent", "globalThisShim", "nextTick", "cb", "setTimeoutFn", "WebSocket", "globalThisShim", "usingBrowserWebSocket", "defaultBinaryType", "isReactNative", "WS", "Transport", "opts", "uri", "protocols", "pick", "usingBrowserWebSocket", "WebSocket", "err", "defaultBinaryType", "closeEvent", "ev", "packets", "i", "packet", "lastPacket", "encodePacket_browser_default", "data", "nextTick", "query", "schema", "port", "yeast", "encodedQuery", "encode", "ipv6", "transports", "WS", "Polling", "re", "parts", "parse", "str", "src", "b", "e", "m", "uri", "i", "pathNames", "queryKey", "obj", "path", "regx", "names", "query", "data", "$0", "$1", "$2", "Socket", "Emitter", "uri", "opts", "parse", "installTimerFunctions", "decode", "name", "query", "protocol", "transports", "transport", "reason", "failed", "onTransportOpen", "msg", "cleanup", "err", "freezeTransport", "onerror", "error", "onTransportClose", "onclose", "onupgrade", "to", "i", "l", "packet", "data", "packets", "payloadSize", "byteLength", "options", "fn", "type", "close", "cleanupAndClose", "waitForUpgrade", "description", "upgrades", "filteredUpgrades", "j", "protocol", "Socket", "url", "uri", "path", "loc", "obj", "parse", "host", "esm_exports", "__export", "Decoder", "Encoder", "PacketType", "protocol", "withNativeArrayBuffer", "isView", "obj", "toString", "withNativeBlob", "withNativeFile", "isBinary", "hasBinary", "toJSON", "i", "l", "key", "deconstructPacket", "packet", "buffers", "packetData", "pack", "_deconstructPacket", "data", "isBinary", "placeholder", "newData", "i", "key", "reconstructPacket", "_reconstructPacket", "protocol", "PacketType", "Encoder", "replacer", "obj", "hasBinary", "str", "deconstruction", "deconstructPacket", "pack", "buffers", "Decoder", "Emitter", "reviver", "packet", "isBinaryEvent", "BinaryReconstructor", "isBinary", "i", "p", "start", "buf", "next", "c", "payload", "type", "binData", "reconstructPacket", "on", "obj", "ev", "fn", "RESERVED_EVENTS", "Socket", "Emitter", "io", "nsp", "opts", "on", "args", "ev", "packet", "PacketType", "id", "ack", "isTransportWritable", "_a", "timeout", "timer", "i", "withErr", "resolve", "reject", "arg1", "arg2", "err", "responseArgs", "force", "data", "reason", "description", "listeners", "listener", "self", "sent", "pid", "subDestroy", "compress", "Backoff", "opts", "ms", "rand", "deviation", "min", "max", "jitter", "Manager", "Emitter", "uri", "opts", "_a", "installTimerFunctions", "Backoff", "_parser", "esm_exports", "v", "fn", "Socket", "socket", "self", "openSubDestroy", "on", "errorSub", "err", "timeout", "timer", "data", "e", "packet", "nextTick", "nsp", "nsps", "encodedPackets", "i", "subDestroy", "reason", "description", "delay", "attempt", "cache", "lookup", "uri", "opts", "parsed", "url", "source", "id", "path", "sameNamespace", "newConnection", "io", "Manager", "Socket", "version", "isMinified", "param", "logLevel", "LOG_STYLES", "log", "args", "level", "strLevel", "head", "makeMeAnObject", "thing", "property", "out", "urlJoin", "e", "_pingInterval", "_propChangeCallbacks", "_msgRecvdByTopicCallbacks", "_timerid", "_MsgHandler", "_isShowMsg", "_isShowStatus", "_extCommands", "_showStatus", "_uiObservers", "_a", "Uib", "__publicField", "__privateAdd", "c", "splitC", "event", "__privateGet", "fullPath", "prop", "val", "id", "value", "title", "details", "callback", "nextCbRef", "propChangeCallback", "cbRef", "topic", "msgRecvdEvtCallback", "msg", "receivedMsg", "serverTimestamp", "offset", "cssSelector", "el", "originator", "ms", "oReq", "headers", "elapsedTime", "__privateSet", "json", "match", "cls", "component", "opts", "str", "lang", "md", "url", "newScript", "newStyle", "textFn", "type", "ui", "content", "toaster", "toast", "evt", "response", "contentType", "data", "err", "comp", "attrib", "parentEl", "components", "ns", "compToAdd", "i", "newEl", "isRecurse", "elParent", "all", "compToRemove", "els", "compToReplace", "elToReplace", "compToUpd", "elToUpd", "__toESM", "__require", "script", "sheet", "showHide", "parent", "slot", "root", "entry", "node", "thisOut", "v", "propName", "selection", "prev", "cur", "p", "key", "startStop", "send", "showLog", "targetNode", "that", "mutationList", "mu", "oMu", "an", "uiOptions", "error", "myBlob", "htmlCache", "msgToSend", "channel", "numMsgs", "domevent", "target", "props", "ignoreAttribs", "attribs", "name", "form", "frmVals", "frmEl", "cmd", "receivedCtrlMsg", "txtToSend", "ioNamespace", "u", "t", "delay", "factor", "depth", "lookup", "reason", "options", "eMsg", "uibuilder", "uibuilder_module_default", "uibuilder"]
}
