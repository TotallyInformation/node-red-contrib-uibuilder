#! /usr/bin/env node
// -*- js -*-

'use strict'

let debug = false
if ( process.env.UIBDEBUG === 'true' ) debug = true

//cd .. && npm install mime vue bootstrap-vue
console.log('======================================= [UIBUILDER PREINSTALL] =======================================')
console.log('Please ignore warnings about missing peer dependencies for jquery')
console.log('==================================================================================================\n\n')

/**  */
function oldprocess() {
    const fs = require('fs'), path = require('path'), child_process = require('child_process')
    //const { exec } = require('child_process')

    /** We need to install peer-dependencies in the userDir folder 
     *  since the current working folder will be that of the uibuilder package
     */
    const wd = process.cwd().replace('node_modules/node-red-contrib-uibuilder', '').replace('node_modules\\node-red-contrib-uibuilder', '')
    process.chdir(wd)
    if ( debug ) console.log(`   Working Folder (userDir): ${wd}`)

    // if ( debug ) {
    //     // Will always show not installed? Because npm removes the package it is installing.
    //     if ( fs.existsSync(path.join(wd, 'node_modules', 'uibuilder')) ) {
    //         console.log('   uibuilder is already installed')
    //     } else {
    //         console.log('   uibuilder is NOT installed')
    //     }
    // }

    // if ( debug ) {
    //     console.log( child_process.execSync('dir', {'cwd': wd+'/node_modules', 'windowsHide': true}).toString() )
    // }

    // start building the command
    let cmd = 'npm install '
    let cmdEnd = '--no-fund --no-audit ' // --production
    if ( !debug ) cmdEnd += '--color=false --no-update-notifier '


    // Check if Vue and bootstrap-vue are already installed
    if (debug) {
        console.log(`   Does ${path.join(wd, 'node_modules', 'vue')} exist? `, fs.existsSync(path.join(wd, 'node_modules', 'vue')) ? 'YES' : 'NO' )
        console.log(`   Does ${path.join(wd, 'node_modules', 'bootstrap-vue')} exist? `, fs.existsSync(path.join(wd, 'node_modules', 'bootstrap-vue')) ? 'YES' : 'NO' )
    }
    let numInstalls = 2
    if ( fs.existsSync(path.join(wd, 'node_modules', 'vue')) ) {
        numInstalls--
        console.log('   Vue.js is already installed, skipping')
    } else {
        cmd += 'vue@"2.*" '
    }
    if ( fs.existsSync(path.join(wd, 'node_modules', 'bootstrap-vue')) ) {
        numInstalls--
        console.log('   bootstrap-vue is already installed, skipping')
    } else {
        cmd += 'bootstrap-vue@"2.*" '
    }

    if ( process.env.UIBNOPRE === 'true' ) {
        if ( numInstalls > 0 ) {
            console.log( '   NOPOST requested so will not run the install. Please install for yourself using:' )
            console.log('    ', cmd+cmdEnd, '\n\nUIBUILDER Pre-install completed\n\n=================================================================\n\n')
        } else {
            console.log('   NOPOST nothing to install.\n\nUIBUILDER Pre-install completed\n\n=================================================================\n\n')
        }
        return
    }

    if ( numInstalls < 1 ) {
        console.log('   Vue and bootstrap-vue are already installed, nothing to install.\nUIBUILDER Pre-install completed\n\n=================================================================\n\n')
        return
    } else {
        if (debug) console.log('   DEBUG - Command to run: ', cmd+cmdEnd)
    }

    let out

    // Get rid of package-lock.json - it seems to cause vue/bootstrap-vue to sometimes disappear on install of uibuilder - it gets rebuilt anyway
    try {
        fs.unlinkSync(path.join(wd,'package-lock.json'))
    } catch (e) {
        // we don't care if it fails
        //if ( debug ) console.log('   Delete package-lock.json ERROR: ', e.message)
    }

    try {
        /** We have to use exec not spawn because we need the shell environment */
        console.log('   npm install ...\n')
        console.log('   ... this will take some time - be patient ...\n')
        out = child_process.execSync(cmd+cmdEnd, {'cwd': wd, 'windowsHide': true}).toString()
        console.log('   ... npm install finished\n')
    } catch (e) {
        console.log('npm install error:',e)
    }
    console.log('npm install:\n', out)

    // Double check that vue is actually installed
    if ( ! ( fs.existsSync(path.join(wd, 'node_modules', 'vue')) && fs.existsSync(path.join(wd, 'node_modules', 'bootstrap-vue')) ) ) {
        console.error('   *** Vue and bootstrap-vue are not installed at the end of the pre-install. ***\n   *** Please install Vue and bootstrap-vue manually. ***')
    }
    if ( ! fs.existsSync(path.join(wd, 'node_modules', 'uibuilder')) ) {
        console.error('   *** ERROR: uibuilder is NOT installed at the end of the pre-install. ***')
    }

    // Get rid of package-lock.json - it seems to cause vue/bootstrap-vue to sometimes disappear on install of uibuilder - it gets rebuilt anyway
    try {
        fs.unlinkSync(path.join(wd,'package-lock.json'))
    } catch (e) {
        // we don't care if it fails
        //if ( debug ) console.log('   Delete package-lock.json ERROR: ', e.message)
    }

    console.log('\n\nUIBUILDER Pre-install completed\n\n=================================================================\n')
}

//EOF
